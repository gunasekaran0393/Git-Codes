

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Jul 28 22:48:11 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           	psect	idataCOMRAM
    41  000848                     __pidataCOMRAM:
    42                           	opt stack 0
    43                           
    44                           ;initializer for _MsgFromPIC
    45  000848  68                 	db	104
    46  000849  65                 	db	101
    47  00084A  6C                 	db	108
    48  00084B  6C                 	db	108
    49  00084C  6F                 	db	111
    50  00084D  20                 	db	32
    51  00084E  70                 	db	112
    52  00084F  6C                 	db	108
    53  000850  65                 	db	101
    54  000851  61                 	db	97
    55  000852  73                 	db	115
    56  000853  65                 	db	101
    57  000854  20                 	db	32
    58  000855  74                 	db	116
    59  000856  79                 	db	121
    60  000857  70                 	db	112
    61  000858  65                 	db	101
    62  000859  00                 	db	0
    63  0000                     _INTCONbits	set	4082
    64  0000                     _LATD	set	3980
    65  0000                     _LATDbits	set	3980
    66  0000                     _OSCCONbits	set	4051
    67  0000                     _PIE1bits	set	3997
    68  0000                     _PIR1bits	set	3998
    69  0000                     _RCREG	set	4014
    70  0000                     _RCSTA	set	4011
    71  0000                     _RCSTAbits	set	4011
    72  0000                     _SPBRG	set	4015
    73  0000                     _SPBRGH	set	4016
    74  0000                     _TRISCbits	set	3988
    75  0000                     _TRISD	set	3989
    76  0000                     _TXREG	set	4013
    77  0000                     _TXSTA	set	4012
    78  0000                     _TXSTAbits	set	4012
    79  0000                     _PEIE	set	32662
    80  0000                     _RCIE	set	31981
    81  0000                     _RCIF	set	31989
    82  0000                     _RCIP	set	31997
    83                           
    84                           	psect	nvCOMRAM
    85  000041                     __pnvCOMRAM:
    86                           	opt stack 0
    87  000041                     _UART1Config:
    88                           	opt stack 0
    89  000041                     	ds	1
    90  000042                     _baud:
    91                           	opt stack 0
    92  000042                     	ds	1
    93                           
    94                           	psect	smallconst
    95  000300                     __psmallconst:
    96                           	opt stack 0
    97  000300  00                 	db	0
    98  000301                     __stringdata:
    99                           	opt stack 0
   100  000301                     STR_1:
   101  000301  68                 	db	104	;'h'
   102  000302  65                 	db	101	;'e'
   103  000303  6C                 	db	108	;'l'
   104  000304  6C                 	db	108	;'l'
   105  000305  6F                 	db	111	;'o'
   106  000306  00                 	db	0
   107  000307                     __end_of__stringdata:
   108                           	opt stack 0
   109  000307  00                 	db	0	; dummy byte at the end
   110  0000                     
   111                           ; #config settings
   112                           
   113                           	psect	cinit
   114  000644                     __pcinit:
   115                           	opt stack 0
   116  000644                     start_initialization:
   117                           	opt stack 0
   118  000644                     __initialization:
   119                           	opt stack 0
   120                           
   121                           ; Clear objects allocated to BANK1 (200 bytes)
   122  000644  EE01  F000         	lfsr	0,__pbssBANK1
   123  000648  0EC8               	movlw	200
   124  00064A                     clear_0:
   125  00064A  6AEE               	clrf	postinc0,c
   126  00064C  06E8               	decf	wreg,f,c
   127  00064E  E1FD               	bnz	clear_0
   128                           
   129                           ; Clear objects allocated to COMRAM (3 bytes)
   130  000650  6A40               	clrf	(__pbssCOMRAM+2)& (0+255),c
   131  000652  6A3F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   132  000654  6A3E               	clrf	__pbssCOMRAM& (0+255),c
   133                           
   134                           ; Initialize objects allocated to COMRAM (18 bytes)
   135                           ; load TBLPTR registers with __pidataCOMRAM
   136  000656  0E48               	movlw	low __pidataCOMRAM
   137  000658  6EF6               	movwf	tblptrl,c
   138  00065A  0E08               	movlw	high __pidataCOMRAM
   139  00065C  6EF7               	movwf	tblptrh,c
   140  00065E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   141  000660  6EF8               	movwf	tblptru,c
   142  000662  EE00  F02C         	lfsr	0,__pdataCOMRAM
   143  000666  EE10 F012          	lfsr	1,18
   144  00066A                     copy_data0:
   145  00066A  0009               	tblrd		*+
   146  00066C  CFF5 FFEE          	movff	tablat,postinc0
   147  000670  50E5               	movf	postdec1,w,c
   148  000672  50E1               	movf	fsr1l,w,c
   149  000674  E1FA               	bnz	copy_data0
   150  000676                     end_of_initialization:
   151                           	opt stack 0
   152  000676                     __end_of__initialization:
   153                           	opt stack 0
   154  000676  0E00               	movlw	low (__Lmediumconst shr (0+16))
   155  000678  6EF8               	movwf	tblptru,c
   156  00067A  0100               	movlb	0
   157  00067C  EFBF  F002         	goto	_main	;jump to C main() function
   158                           tblptru	equ	0xFF8
   159                           tblptrh	equ	0xFF7
   160                           tblptrl	equ	0xFF6
   161                           tablat	equ	0xFF5
   162                           postinc0	equ	0xFEE
   163                           wreg	equ	0xFE8
   164                           postdec1	equ	0xFE5
   165                           fsr1l	equ	0xFE1
   166                           
   167                           	psect	bssCOMRAM
   168  00003E                     __pbssCOMRAM:
   169                           	opt stack 0
   170  00003E                     _i:
   171                           	opt stack 0
   172  00003E                     	ds	2
   173  000040                     _USART_Status:
   174                           	opt stack 0
   175  000040                     	ds	1
   176                           tblptru	equ	0xFF8
   177                           tblptrh	equ	0xFF7
   178                           tblptrl	equ	0xFF6
   179                           tablat	equ	0xFF5
   180                           postinc0	equ	0xFEE
   181                           wreg	equ	0xFE8
   182                           postdec1	equ	0xFE5
   183                           fsr1l	equ	0xFE1
   184                           
   185                           	psect	dataCOMRAM
   186  00002C                     __pdataCOMRAM:
   187                           	opt stack 0
   188  00002C                     _MsgFromPIC:
   189                           	opt stack 0
   190  00002C                     	ds	18
   191                           tblptru	equ	0xFF8
   192                           tblptrh	equ	0xFF7
   193                           tblptrl	equ	0xFF6
   194                           tablat	equ	0xFF5
   195                           postinc0	equ	0xFEE
   196                           wreg	equ	0xFE8
   197                           postdec1	equ	0xFE5
   198                           fsr1l	equ	0xFE1
   199                           
   200                           	psect	bssBANK1
   201  000100                     __pbssBANK1:
   202                           	opt stack 0
   203  000100                     _MessageBuffer:
   204                           	opt stack 0
   205  000100                     	ds	200
   206                           tblptru	equ	0xFF8
   207                           tblptrh	equ	0xFF7
   208                           tblptrl	equ	0xFF6
   209                           tablat	equ	0xFF5
   210                           postinc0	equ	0xFEE
   211                           wreg	equ	0xFE8
   212                           postdec1	equ	0xFE5
   213                           fsr1l	equ	0xFE1
   214                           
   215                           	psect	cstackCOMRAM
   216  000001                     __pcstackCOMRAM:
   217                           	opt stack 0
   218  000001                     ReadUSART@data:
   219                           	opt stack 0
   220  000001                     WriteUSART@data:
   221                           	opt stack 0
   222  000001                     i2Delay_ms@x:
   223                           	opt stack 0
   224                           
   225                           ; 2 bytes @ 0x0
   226  000001                     	ds	1
   227  000002                     putsUSART@data:
   228                           	opt stack 0
   229                           
   230                           ; 2 bytes @ 0x1
   231  000002                     	ds	1
   232  000003                     ??i2_Delay_ms:
   233                           
   234                           ; 0 bytes @ 0x2
   235  000003                     	ds	1
   236  000004                     i2Delay_ms@j:
   237                           	opt stack 0
   238                           
   239                           ; 2 bytes @ 0x3
   240  000004                     	ds	2
   241  000006                     i2Delay_ms@i:
   242                           	opt stack 0
   243                           
   244                           ; 2 bytes @ 0x5
   245  000006                     	ds	2
   246  000008                     i2lcdcmd@cmdout:
   247                           	opt stack 0
   248  000008                     i2lcddata@dataout:
   249                           	opt stack 0
   250                           
   251                           ; 1 bytes @ 0x7
   252  000008                     	ds	1
   253  000009                     i2dis_cmd@cmd_value:
   254                           	opt stack 0
   255  000009                     i2dis_data@data_value:
   256                           	opt stack 0
   257                           
   258                           ; 1 bytes @ 0x8
   259  000009                     	ds	1
   260  00000A                     i2dis_cmd@cmd_value1:
   261                           	opt stack 0
   262  00000A                     i2dis_data@data_value1:
   263                           	opt stack 0
   264                           
   265                           ; 1 bytes @ 0x9
   266  00000A                     	ds	1
   267  00000B                     i2lcd_goto@cnt:
   268                           	opt stack 0
   269  00000B                     i2lcd_puts@p:
   270                           	opt stack 0
   271                           
   272                           ; 2 bytes @ 0xA
   273  00000B                     	ds	2
   274  00000D                     ??_SerialRxPinInterrupt:
   275  00000D                     
   276                           ; 0 bytes @ 0xC
   277  00000D                     	ds	14
   278  00001B                     Delay_ms@x:
   279                           	opt stack 0
   280  00001B                     OpenUSART@spbrg:
   281                           	opt stack 0
   282                           
   283                           ; 2 bytes @ 0x1A
   284  00001B                     	ds	2
   285  00001D                     ??_Delay_ms:
   286  00001D                     ??_OpenUSART:
   287                           
   288                           ; 0 bytes @ 0x1C
   289  00001D                     	ds	1
   290  00001E                     Delay_ms@j:
   291                           	opt stack 0
   292                           
   293                           ; 2 bytes @ 0x1D
   294  00001E                     	ds	2
   295  000020                     OpenUSART@config:
   296                           	opt stack 0
   297  000020                     Delay_ms@i:
   298                           	opt stack 0
   299                           
   300                           ; 2 bytes @ 0x1F
   301  000020                     	ds	2
   302  000022                     lcdcmd@cmdout:
   303                           	opt stack 0
   304  000022                     lcddata@dataout:
   305                           	opt stack 0
   306                           
   307                           ; 1 bytes @ 0x21
   308  000022                     	ds	1
   309  000023                     dis_cmd@cmd_value:
   310                           	opt stack 0
   311  000023                     dis_data@data_value:
   312                           	opt stack 0
   313                           
   314                           ; 1 bytes @ 0x22
   315  000023                     	ds	1
   316  000024                     dis_cmd@cmd_value1:
   317                           	opt stack 0
   318  000024                     dis_data@data_value1:
   319                           	opt stack 0
   320                           
   321                           ; 1 bytes @ 0x23
   322  000024                     	ds	1
   323  000025                     lcd_goto@cnt:
   324                           	opt stack 0
   325  000025                     lcd_puts@p:
   326                           	opt stack 0
   327                           
   328                           ; 2 bytes @ 0x24
   329  000025                     	ds	2
   330  000027                     
   331                           ; 2 bytes @ 0x26
   332  000027                     	ds	2
   333  000029                     
   334                           ; 3 bytes @ 0x28
   335  000029                     	ds	3
   336  00002C                     tblptru	equ	0xFF8
   337                           tblptrh	equ	0xFF7
   338                           tblptrl	equ	0xFF6
   339                           tablat	equ	0xFF5
   340                           postinc0	equ	0xFEE
   341                           wreg	equ	0xFE8
   342                           postdec1	equ	0xFE5
   343                           fsr1l	equ	0xFE1
   344                           
   345                           ; 0 bytes @ 0x2B
   346 ;;
   347 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   348 ;;
   349 ;; *************** function _main *****************
   350 ;; Defined at:
   351 ;;		line 17 in file "../uart.c"
   352 ;; Parameters:    Size  Location     Type
   353 ;;  argc            2   38[COMRAM] int 
   354 ;;  argv            3   40[COMRAM] PTR PTR unsigned char 
   355 ;; Auto vars:     Size  Location     Type
   356 ;;		None
   357 ;; Return value:  Size  Location     Type
   358 ;;		None               void
   359 ;; Registers used:
   360 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   361 ;; Tracked objects:
   362 ;;		On entry : 0/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   366 ;;      Params:         5       0       0       0
   367 ;;      Locals:         0       0       0       0
   368 ;;      Temps:          0       0       0       0
   369 ;;      Totals:         5       0       0       0
   370 ;;Total ram usage:        5 bytes
   371 ;; Hardware stack levels required when called:    9
   372 ;; This function calls:
   373 ;;		_OpenUSART
   374 ;;		_SetupClock
   375 ;;		_lcd_goto
   376 ;;		_lcd_init
   377 ;;		_lcd_puts
   378 ;;		_set_lcdport
   379 ;; This function is called by:
   380 ;;		Startup code after reset
   381 ;; This function uses a non-reentrant model
   382 ;;
   383                           
   384                           	psect	text0
   385  00057E                     __ptext0:
   386                           	opt stack 0
   387  00057E                     _main:
   388                           	opt stack 22
   389                           
   390                           ;uart.c: 19: SetupClock();
   391                           
   392                           ;incstack = 0
   393  00057E  EC3B  F004         	call	_SetupClock	;wreg free
   394                           
   395                           ;uart.c: 21: TRISCbits.RC6 = 0;
   396  000582  9C94               	bcf	3988,6,c	;volatile
   397                           
   398                           ;uart.c: 22: TRISCbits.RC7 = 1;
   399  000584  8E94               	bsf	3988,7,c	;volatile
   400                           
   401                           ;uart.c: 24: UART1Config = 0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 & 0b1111111
      +                          1 ;
   402  000586  0E7C               	movlw	124
   403  000588  6E41               	movwf	_UART1Config,c
   404                           
   405                           ;uart.c: 25: baud = 51;
   406  00058A  0E33               	movlw	51
   407  00058C  6E42               	movwf	_baud,c
   408                           
   409                           ;uart.c: 26: OpenUSART(UART1Config,baud);
   410  00058E  C042  F01B         	movff	_baud,OpenUSART@spbrg
   411  000592  6A1C               	clrf	OpenUSART@spbrg+1,c
   412  000594  5041               	movf	_UART1Config,w,c
   413  000596  EC39  F002         	call	_OpenUSART
   414                           
   415                           ;uart.c: 30: RCIF = 0;
   416  00059A  9A9E               	bcf	3998,5,c	;volatile
   417                           
   418                           ;uart.c: 31: RCIP = 0;
   419  00059C  9A9F               	bcf	3999,5,c	;volatile
   420                           
   421                           ;uart.c: 32: RCIE = 1;
   422  00059E  8A9D               	bsf	3997,5,c	;volatile
   423                           
   424                           ;uart.c: 33: PEIE = 1;
   425  0005A0  8CF2               	bsf	intcon,6,c	;volatile
   426                           
   427                           ;uart.c: 35: (INTCONbits.GIE = 1);
   428  0005A2  8EF2               	bsf	intcon,7,c	;volatile
   429                           
   430                           ;uart.c: 36: set_lcdport();
   431  0005A4  EC36  F004         	call	_set_lcdport	;wreg free
   432                           
   433                           ;uart.c: 37: lcd_init();
   434  0005A8  EC7C  F003         	call	_lcd_init	;wreg free
   435                           
   436                           ;uart.c: 38: lcd_goto(1);
   437  0005AC  0E01               	movlw	1
   438  0005AE  EC40  F003         	call	_lcd_goto
   439                           
   440                           ;uart.c: 39: lcd_puts("hello");
   441  0005B2  0E03               	movlw	high STR_1
   442  0005B4  6E26               	movwf	lcd_puts@p+1,c
   443  0005B6  0E01               	movlw	low STR_1
   444  0005B8  6E25               	movwf	lcd_puts@p,c
   445  0005BA  EC6D  F002         	call	_lcd_puts	;wreg free
   446  0005BE                     l120:
   447                           
   448                           ;uart.c: 41: {
   449  0005BE  D7FF               	goto	l120
   450  0005C0                     __end_of_main:
   451                           	opt stack 0
   452                           tblptru	equ	0xFF8
   453                           tblptrh	equ	0xFF7
   454                           tblptrl	equ	0xFF6
   455                           tablat	equ	0xFF5
   456                           intcon	equ	0xFF2
   457                           postinc0	equ	0xFEE
   458                           wreg	equ	0xFE8
   459                           postdec1	equ	0xFE5
   460                           fsr1l	equ	0xFE1
   461                           
   462 ;; *************** function _set_lcdport *****************
   463 ;; Defined at:
   464 ;;		line 42 in file "../lcd_driver.c"
   465 ;; Parameters:    Size  Location     Type
   466 ;;		None
   467 ;; Auto vars:     Size  Location     Type
   468 ;;		None
   469 ;; Return value:  Size  Location     Type
   470 ;;		None               void
   471 ;; Registers used:
   472 ;;		wreg, status,2
   473 ;; Tracked objects:
   474 ;;		On entry : 0/0
   475 ;;		On exit  : 0/0
   476 ;;		Unchanged: 0/0
   477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   478 ;;      Params:         0       0       0       0
   479 ;;      Locals:         0       0       0       0
   480 ;;      Temps:          0       0       0       0
   481 ;;      Totals:         0       0       0       0
   482 ;;Total ram usage:        0 bytes
   483 ;; Hardware stack levels used:    1
   484 ;; Hardware stack levels required when called:    5
   485 ;; This function calls:
   486 ;;		Nothing
   487 ;; This function is called by:
   488 ;;		_main
   489 ;; This function uses a non-reentrant model
   490 ;;
   491                           
   492                           	psect	text1
   493  00086C                     __ptext1:
   494                           	opt stack 0
   495  00086C                     _set_lcdport:
   496                           	opt stack 25
   497                           
   498                           ;lcd_driver.c: 44: TRISD=0;
   499                           
   500                           ;incstack = 0
   501  00086C  0E00               	movlw	0
   502  00086E  6E95               	movwf	3989,c	;volatile
   503                           
   504                           ;lcd_driver.c: 45: LATD=0;
   505  000870  0E00               	movlw	0
   506  000872  6E8C               	movwf	3980,c	;volatile
   507  000874  0012               	return	
   508  000876                     __end_of_set_lcdport:
   509                           	opt stack 0
   510                           tblptru	equ	0xFF8
   511                           tblptrh	equ	0xFF7
   512                           tblptrl	equ	0xFF6
   513                           tablat	equ	0xFF5
   514                           intcon	equ	0xFF2
   515                           postinc0	equ	0xFEE
   516                           wreg	equ	0xFE8
   517                           postdec1	equ	0xFE5
   518                           fsr1l	equ	0xFE1
   519                           
   520 ;; *************** function _lcd_puts *****************
   521 ;; Defined at:
   522 ;;		line 124 in file "../lcd_driver.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;  p               2   36[COMRAM] PTR const unsigned char 
   525 ;;		 -> MessageBuffer(200), STR_1(6), 
   526 ;; Auto vars:     Size  Location     Type
   527 ;;		None
   528 ;; Return value:  Size  Location     Type
   529 ;;		None               void
   530 ;; Registers used:
   531 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   532 ;; Tracked objects:
   533 ;;		On entry : 0/0
   534 ;;		On exit  : 0/0
   535 ;;		Unchanged: 0/0
   536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   537 ;;      Params:         2       0       0       0
   538 ;;      Locals:         0       0       0       0
   539 ;;      Temps:          0       0       0       0
   540 ;;      Totals:         2       0       0       0
   541 ;;Total ram usage:        2 bytes
   542 ;; Hardware stack levels used:    1
   543 ;; Hardware stack levels required when called:    8
   544 ;; This function calls:
   545 ;;		_dis_data
   546 ;; This function is called by:
   547 ;;		_main
   548 ;; This function uses a non-reentrant model
   549 ;;
   550                           
   551                           	psect	text2
   552  0004DA                     __ptext2:
   553                           	opt stack 0
   554  0004DA                     _lcd_puts:
   555                           	opt stack 22
   556                           
   557                           ;lcd_driver.c: 126: while(*p != '\0'){
   558                           
   559                           ;incstack = 0
   560  0004DA  D014               	goto	l908
   561  0004DC                     l904:
   562                           
   563                           ;lcd_driver.c: 127: dis_data(*p);
   564  0004DC  C025  FFF6         	movff	lcd_puts@p,tblptrl
   565  0004E0  C026  FFF7         	movff	lcd_puts@p+1,tblptrh
   566  0004E4  6AF8               	clrf	tblptru,c
   567  0004E6  0E02               	movlw	(high __ramtop+-1)
   568  0004E8  64F7               	cpfsgt	tblptrh,c
   569  0004EA  D003               	bra	u97
   570  0004EC  0008               	tblrd		*
   571  0004EE  50F5               	movf	tablat,w,c
   572  0004F0  D005               	bra	u90
   573  0004F2                     u97:
   574  0004F2  CFF6 FFE9          	movff	tblptrl,fsr0l
   575  0004F6  CFF7 FFEA          	movff	tblptrh,fsr0h
   576  0004FA  50EF               	movf	indf0,w,c
   577  0004FC                     u90:
   578  0004FC  ECA5  F003         	call	_dis_data
   579                           
   580                           ;lcd_driver.c: 128: p++;
   581  000500  4A25               	infsnz	lcd_puts@p,f,c
   582  000502  2A26               	incf	lcd_puts@p+1,f,c
   583  000504                     l908:
   584  000504  C025  FFF6         	movff	lcd_puts@p,tblptrl
   585  000508  C026  FFF7         	movff	lcd_puts@p+1,tblptrh
   586  00050C  6AF8               	clrf	tblptru,c
   587  00050E  0E02               	movlw	(high __ramtop+-1)
   588  000510  64F7               	cpfsgt	tblptrh,c
   589  000512  D003               	bra	u107
   590  000514  0008               	tblrd		*
   591  000516  50F5               	movf	tablat,w,c
   592  000518  D005               	bra	u100
   593  00051A                     u107:
   594  00051A  CFF6 FFE9          	movff	tblptrl,fsr0l
   595  00051E  CFF7 FFEA          	movff	tblptrh,fsr0h
   596  000522  50EF               	movf	indf0,w,c
   597  000524                     u100:
   598  000524  0900               	iorlw	0
   599  000526  B4D8               	btfsc	status,2,c
   600  000528  0012               	return	
   601  00052A  D7D8               	goto	l904
   602  00052C                     __end_of_lcd_puts:
   603                           	opt stack 0
   604                           tblptru	equ	0xFF8
   605                           tblptrh	equ	0xFF7
   606                           tblptrl	equ	0xFF6
   607                           tablat	equ	0xFF5
   608                           intcon	equ	0xFF2
   609                           indf0	equ	0xFEF
   610                           postinc0	equ	0xFEE
   611                           fsr0h	equ	0xFEA
   612                           fsr0l	equ	0xFE9
   613                           wreg	equ	0xFE8
   614                           postdec1	equ	0xFE5
   615                           fsr1l	equ	0xFE1
   616                           status	equ	0xFD8
   617                           
   618 ;; *************** function _dis_data *****************
   619 ;; Defined at:
   620 ;;		line 85 in file "../lcd_driver.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;  data_value      1    wreg     unsigned char 
   623 ;; Auto vars:     Size  Location     Type
   624 ;;  data_value      1   34[COMRAM] unsigned char 
   625 ;;  data_value1     1   35[COMRAM] unsigned char 
   626 ;; Return value:  Size  Location     Type
   627 ;;		None               void
   628 ;; Registers used:
   629 ;;		wreg, status,2, status,0, cstack
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   635 ;;      Params:         0       0       0       0
   636 ;;      Locals:         2       0       0       0
   637 ;;      Temps:          0       0       0       0
   638 ;;      Totals:         2       0       0       0
   639 ;;Total ram usage:        2 bytes
   640 ;; Hardware stack levels used:    1
   641 ;; Hardware stack levels required when called:    7
   642 ;; This function calls:
   643 ;;		_lcddata
   644 ;; This function is called by:
   645 ;;		_lcd_puts
   646 ;;		_lcd_putc
   647 ;;		_lcd_put_array
   648 ;; This function uses a non-reentrant model
   649 ;;
   650                           
   651                           	psect	text3
   652  00074A                     __ptext3:
   653                           	opt stack 0
   654  00074A                     _dis_data:
   655                           	opt stack 22
   656                           
   657                           ;incstack = 0
   658                           ;dis_data@data_value stored from wreg
   659  00074A  6E23               	movwf	dis_data@data_value,c
   660                           
   661                           ;lcd_driver.c: 87: unsigned char data_value1;
   662                           ;lcd_driver.c: 88: data_value1=(data_value&0xF0);
   663  00074C  5023               	movf	dis_data@data_value,w,c
   664  00074E  0BF0               	andlw	240
   665  000750  6E24               	movwf	dis_data@data_value1,c
   666                           
   667                           ;lcd_driver.c: 89: lcddata(data_value1);
   668  000752  5024               	movf	dis_data@data_value1,w,c
   669  000754  ECF0  F003         	call	_lcddata
   670                           
   671                           ;lcd_driver.c: 90: data_value1=((data_value<<4)&0xF0);
   672  000758  3823               	swapf	dis_data@data_value,w,c
   673  00075A  0BF0               	andlw	240
   674  00075C  0BF0               	andlw	240
   675  00075E  6E24               	movwf	dis_data@data_value1,c
   676                           
   677                           ;lcd_driver.c: 91: lcddata(data_value1);
   678  000760  5024               	movf	dis_data@data_value1,w,c
   679  000762  ECF0  F003         	call	_lcddata
   680  000766  0012               	return	
   681  000768                     __end_of_dis_data:
   682                           	opt stack 0
   683                           tblptru	equ	0xFF8
   684                           tblptrh	equ	0xFF7
   685                           tblptrl	equ	0xFF6
   686                           tablat	equ	0xFF5
   687                           intcon	equ	0xFF2
   688                           indf0	equ	0xFEF
   689                           postinc0	equ	0xFEE
   690                           fsr0h	equ	0xFEA
   691                           fsr0l	equ	0xFE9
   692                           wreg	equ	0xFE8
   693                           postdec1	equ	0xFE5
   694                           fsr1l	equ	0xFE1
   695                           status	equ	0xFD8
   696                           
   697 ;; *************** function _lcddata *****************
   698 ;; Defined at:
   699 ;;		line 103 in file "../lcd_driver.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;  dataout         1    wreg     unsigned char 
   702 ;; Auto vars:     Size  Location     Type
   703 ;;  dataout         1   33[COMRAM] unsigned char 
   704 ;; Return value:  Size  Location     Type
   705 ;;		None               void
   706 ;; Registers used:
   707 ;;		wreg, status,2, status,0, cstack
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   713 ;;      Params:         0       0       0       0
   714 ;;      Locals:         1       0       0       0
   715 ;;      Temps:          0       0       0       0
   716 ;;      Totals:         1       0       0       0
   717 ;;Total ram usage:        1 bytes
   718 ;; Hardware stack levels used:    1
   719 ;; Hardware stack levels required when called:    6
   720 ;; This function calls:
   721 ;;		_Delay_ms
   722 ;; This function is called by:
   723 ;;		_dis_data
   724 ;; This function uses a non-reentrant model
   725 ;;
   726                           
   727                           	psect	text4
   728  0007E0                     __ptext4:
   729                           	opt stack 0
   730  0007E0                     _lcddata:
   731                           	opt stack 22
   732                           
   733                           ;incstack = 0
   734                           ;lcddata@dataout stored from wreg
   735  0007E0  6E22               	movwf	lcddata@dataout,c
   736                           
   737                           ;lcd_driver.c: 105: LATD=dataout;
   738  0007E2  C022  FF8C         	movff	lcddata@dataout,3980	;volatile
   739                           
   740                           ;lcd_driver.c: 106: LATDbits.LATD3=1;
   741  0007E6  868C               	bsf	3980,3,c	;volatile
   742                           
   743                           ;lcd_driver.c: 107: LATDbits.LATD2=1;
   744  0007E8  848C               	bsf	3980,2,c	;volatile
   745                           
   746                           ;lcd_driver.c: 108: Delay_ms(10);
   747  0007EA  0E00               	movlw	0
   748  0007EC  6E1C               	movwf	Delay_ms@x+1,c
   749  0007EE  0E0A               	movlw	10
   750  0007F0  6E1B               	movwf	Delay_ms@x,c
   751  0007F2  ECE0  F002         	call	_Delay_ms	;wreg free
   752                           
   753                           ;lcd_driver.c: 109: LATDbits.LATD2=0;
   754  0007F6  948C               	bcf	3980,2,c	;volatile
   755  0007F8  0012               	return	
   756  0007FA                     __end_of_lcddata:
   757                           	opt stack 0
   758                           tblptru	equ	0xFF8
   759                           tblptrh	equ	0xFF7
   760                           tblptrl	equ	0xFF6
   761                           tablat	equ	0xFF5
   762                           intcon	equ	0xFF2
   763                           indf0	equ	0xFEF
   764                           postinc0	equ	0xFEE
   765                           fsr0h	equ	0xFEA
   766                           fsr0l	equ	0xFE9
   767                           wreg	equ	0xFE8
   768                           postdec1	equ	0xFE5
   769                           fsr1l	equ	0xFE1
   770                           status	equ	0xFD8
   771                           
   772 ;; *************** function _lcd_init *****************
   773 ;; Defined at:
   774 ;;		line 63 in file "../lcd_driver.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;		None
   777 ;; Auto vars:     Size  Location     Type
   778 ;;		None
   779 ;; Return value:  Size  Location     Type
   780 ;;		None               void
   781 ;; Registers used:
   782 ;;		wreg, status,2, status,0, cstack
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   788 ;;      Params:         0       0       0       0
   789 ;;      Locals:         0       0       0       0
   790 ;;      Temps:          0       0       0       0
   791 ;;      Totals:         0       0       0       0
   792 ;;Total ram usage:        0 bytes
   793 ;; Hardware stack levels used:    1
   794 ;; Hardware stack levels required when called:    8
   795 ;; This function calls:
   796 ;;		_dis_cmd
   797 ;; This function is called by:
   798 ;;		_main
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802                           	psect	text5
   803  0006F8                     __ptext5:
   804                           	opt stack 0
   805  0006F8                     _lcd_init:
   806                           	opt stack 22
   807                           
   808                           ;lcd_driver.c: 65: dis_cmd(0x02);
   809                           
   810                           ;incstack = 0
   811  0006F8  0E02               	movlw	2
   812  0006FA  ECB4  F003         	call	_dis_cmd
   813                           
   814                           ;lcd_driver.c: 66: dis_cmd(0x28);
   815  0006FE  0E28               	movlw	40
   816  000700  ECB4  F003         	call	_dis_cmd
   817                           
   818                           ;lcd_driver.c: 67: dis_cmd(0x01);
   819  000704  0E01               	movlw	1
   820  000706  ECB4  F003         	call	_dis_cmd
   821                           
   822                           ;lcd_driver.c: 68: dis_cmd(0x17);
   823  00070A  0E17               	movlw	23
   824  00070C  ECB4  F003         	call	_dis_cmd
   825                           
   826                           ;lcd_driver.c: 69: dis_cmd(0x0C);
   827  000710  0E0C               	movlw	12
   828  000712  ECB4  F003         	call	_dis_cmd
   829                           
   830                           ;lcd_driver.c: 70: dis_cmd(0x06);
   831  000716  0E06               	movlw	6
   832  000718  ECB4  F003         	call	_dis_cmd
   833                           
   834                           ;lcd_driver.c: 71: dis_cmd(0x83);
   835  00071C  0E83               	movlw	131
   836  00071E  ECB4  F003         	call	_dis_cmd
   837  000722  0012               	return	
   838  000724                     __end_of_lcd_init:
   839                           	opt stack 0
   840                           tblptru	equ	0xFF8
   841                           tblptrh	equ	0xFF7
   842                           tblptrl	equ	0xFF6
   843                           tablat	equ	0xFF5
   844                           intcon	equ	0xFF2
   845                           indf0	equ	0xFEF
   846                           postinc0	equ	0xFEE
   847                           fsr0h	equ	0xFEA
   848                           fsr0l	equ	0xFE9
   849                           wreg	equ	0xFE8
   850                           postdec1	equ	0xFE5
   851                           fsr1l	equ	0xFE1
   852                           status	equ	0xFD8
   853                           
   854 ;; *************** function _lcd_goto *****************
   855 ;; Defined at:
   856 ;;		line 157 in file "../lcd_driver.c"
   857 ;; Parameters:    Size  Location     Type
   858 ;;  cnt             1    wreg     unsigned char 
   859 ;; Auto vars:     Size  Location     Type
   860 ;;  cnt             1   36[COMRAM] unsigned char 
   861 ;; Return value:  Size  Location     Type
   862 ;;		None               void
   863 ;; Registers used:
   864 ;;		wreg, status,2, status,0, cstack
   865 ;; Tracked objects:
   866 ;;		On entry : 0/0
   867 ;;		On exit  : 0/0
   868 ;;		Unchanged: 0/0
   869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   870 ;;      Params:         0       0       0       0
   871 ;;      Locals:         1       0       0       0
   872 ;;      Temps:          0       0       0       0
   873 ;;      Totals:         1       0       0       0
   874 ;;Total ram usage:        1 bytes
   875 ;; Hardware stack levels used:    1
   876 ;; Hardware stack levels required when called:    8
   877 ;; This function calls:
   878 ;;		_dis_cmd
   879 ;; This function is called by:
   880 ;;		_main
   881 ;; This function uses a non-reentrant model
   882 ;;
   883                           
   884                           	psect	text6
   885  000680                     __ptext6:
   886                           	opt stack 0
   887  000680                     _lcd_goto:
   888                           	opt stack 22
   889                           
   890                           ;incstack = 0
   891                           ;lcd_goto@cnt stored from wreg
   892  000680  6E25               	movwf	lcd_goto@cnt,c
   893                           
   894                           ;lcd_driver.c: 159: if(cnt > 60)
   895  000682  0E3C               	movlw	60
   896  000684  6425               	cpfsgt	lcd_goto@cnt,c
   897  000686  D005               	goto	l914
   898                           
   899                           ;lcd_driver.c: 160: dis_cmd(0xD4+(cnt-61));
   900  000688  5025               	movf	lcd_goto@cnt,w,c
   901  00068A  0F97               	addlw	151
   902  00068C  ECB4  F003         	call	_dis_cmd
   903  000690  D014               	goto	l99
   904  000692                     l914:
   905                           
   906                           ;lcd_driver.c: 161: else if(cnt > 40)
   907  000692  0E28               	movlw	40
   908  000694  6425               	cpfsgt	lcd_goto@cnt,c
   909  000696  D005               	goto	l918
   910                           
   911                           ;lcd_driver.c: 162: dis_cmd(0x94+(cnt-41));
   912  000698  5025               	movf	lcd_goto@cnt,w,c
   913  00069A  0F6B               	addlw	107
   914  00069C  ECB4  F003         	call	_dis_cmd
   915  0006A0  D00C               	goto	l99
   916  0006A2                     l918:
   917                           
   918                           ;lcd_driver.c: 163: else if(cnt >20)
   919  0006A2  0E14               	movlw	20
   920  0006A4  6425               	cpfsgt	lcd_goto@cnt,c
   921  0006A6  D005               	goto	l922
   922                           
   923                           ;lcd_driver.c: 164: dis_cmd(0xC0+(cnt-21));
   924  0006A8  5025               	movf	lcd_goto@cnt,w,c
   925  0006AA  0FAB               	addlw	171
   926  0006AC  ECB4  F003         	call	_dis_cmd
   927  0006B0  D004               	goto	l99
   928  0006B2                     l922:
   929                           
   930                           ;lcd_driver.c: 165: else
   931                           ;lcd_driver.c: 166: dis_cmd(0x80+(cnt-1));
   932  0006B2  5025               	movf	lcd_goto@cnt,w,c
   933  0006B4  0F7F               	addlw	127
   934  0006B6  ECB4  F003         	call	_dis_cmd
   935  0006BA                     l99:
   936  0006BA  0012               	return	
   937  0006BC                     __end_of_lcd_goto:
   938                           	opt stack 0
   939                           tblptru	equ	0xFF8
   940                           tblptrh	equ	0xFF7
   941                           tblptrl	equ	0xFF6
   942                           tablat	equ	0xFF5
   943                           intcon	equ	0xFF2
   944                           indf0	equ	0xFEF
   945                           postinc0	equ	0xFEE
   946                           fsr0h	equ	0xFEA
   947                           fsr0l	equ	0xFE9
   948                           wreg	equ	0xFE8
   949                           postdec1	equ	0xFE5
   950                           fsr1l	equ	0xFE1
   951                           status	equ	0xFD8
   952                           
   953 ;; *************** function _dis_cmd *****************
   954 ;; Defined at:
   955 ;;		line 74 in file "../lcd_driver.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;  cmd_value       1    wreg     unsigned char 
   958 ;; Auto vars:     Size  Location     Type
   959 ;;  cmd_value       1   34[COMRAM] unsigned char 
   960 ;;  cmd_value1      1   35[COMRAM] unsigned char 
   961 ;; Return value:  Size  Location     Type
   962 ;;		None               void
   963 ;; Registers used:
   964 ;;		wreg, status,2, status,0, cstack
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   970 ;;      Params:         0       0       0       0
   971 ;;      Locals:         2       0       0       0
   972 ;;      Temps:          0       0       0       0
   973 ;;      Totals:         2       0       0       0
   974 ;;Total ram usage:        2 bytes
   975 ;; Hardware stack levels used:    1
   976 ;; Hardware stack levels required when called:    7
   977 ;; This function calls:
   978 ;;		_lcdcmd
   979 ;; This function is called by:
   980 ;;		_lcd_init
   981 ;;		_lcd_goto
   982 ;;		_lcd_goto_pos
   983 ;;		_lcd_clrscr
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           	psect	text7
   988  000768                     __ptext7:
   989                           	opt stack 0
   990  000768                     _dis_cmd:
   991                           	opt stack 22
   992                           
   993                           ;incstack = 0
   994                           ;dis_cmd@cmd_value stored from wreg
   995  000768  6E23               	movwf	dis_cmd@cmd_value,c
   996                           
   997                           ;lcd_driver.c: 76: unsigned char cmd_value1;
   998                           ;lcd_driver.c: 77: cmd_value1 = (cmd_value & 0xF0);
   999  00076A  5023               	movf	dis_cmd@cmd_value,w,c
  1000  00076C  0BF0               	andlw	240
  1001  00076E  6E24               	movwf	dis_cmd@cmd_value1,c
  1002                           
  1003                           ;lcd_driver.c: 78: lcdcmd(cmd_value1);
  1004  000770  5024               	movf	dis_cmd@cmd_value1,w,c
  1005  000772  ECFD  F003         	call	_lcdcmd
  1006                           
  1007                           ;lcd_driver.c: 79: cmd_value1 = ((cmd_value<<4) & 0xF0);
  1008  000776  3823               	swapf	dis_cmd@cmd_value,w,c
  1009  000778  0BF0               	andlw	240
  1010  00077A  0BF0               	andlw	240
  1011  00077C  6E24               	movwf	dis_cmd@cmd_value1,c
  1012                           
  1013                           ;lcd_driver.c: 80: lcdcmd(cmd_value1);
  1014  00077E  5024               	movf	dis_cmd@cmd_value1,w,c
  1015  000780  ECFD  F003         	call	_lcdcmd
  1016  000784  0012               	return	
  1017  000786                     __end_of_dis_cmd:
  1018                           	opt stack 0
  1019                           tblptru	equ	0xFF8
  1020                           tblptrh	equ	0xFF7
  1021                           tblptrl	equ	0xFF6
  1022                           tablat	equ	0xFF5
  1023                           intcon	equ	0xFF2
  1024                           indf0	equ	0xFEF
  1025                           postinc0	equ	0xFEE
  1026                           fsr0h	equ	0xFEA
  1027                           fsr0l	equ	0xFE9
  1028                           wreg	equ	0xFE8
  1029                           postdec1	equ	0xFE5
  1030                           fsr1l	equ	0xFE1
  1031                           status	equ	0xFD8
  1032                           
  1033 ;; *************** function _lcdcmd *****************
  1034 ;; Defined at:
  1035 ;;		line 94 in file "../lcd_driver.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;  cmdout          1    wreg     unsigned char 
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;  cmdout          1   33[COMRAM] unsigned char 
  1040 ;; Return value:  Size  Location     Type
  1041 ;;		None               void
  1042 ;; Registers used:
  1043 ;;		wreg, status,2, status,0, cstack
  1044 ;; Tracked objects:
  1045 ;;		On entry : 0/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1049 ;;      Params:         0       0       0       0
  1050 ;;      Locals:         1       0       0       0
  1051 ;;      Temps:          0       0       0       0
  1052 ;;      Totals:         1       0       0       0
  1053 ;;Total ram usage:        1 bytes
  1054 ;; Hardware stack levels used:    1
  1055 ;; Hardware stack levels required when called:    6
  1056 ;; This function calls:
  1057 ;;		_Delay_ms
  1058 ;; This function is called by:
  1059 ;;		_dis_cmd
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063                           	psect	text8
  1064  0007FA                     __ptext8:
  1065                           	opt stack 0
  1066  0007FA                     _lcdcmd:
  1067                           	opt stack 22
  1068                           
  1069                           ;incstack = 0
  1070                           ;lcdcmd@cmdout stored from wreg
  1071  0007FA  6E22               	movwf	lcdcmd@cmdout,c
  1072                           
  1073                           ;lcd_driver.c: 96: LATD=cmdout;
  1074  0007FC  C022  FF8C         	movff	lcdcmd@cmdout,3980	;volatile
  1075                           
  1076                           ;lcd_driver.c: 97: LATDbits.LATD3=0;
  1077  000800  968C               	bcf	3980,3,c	;volatile
  1078                           
  1079                           ;lcd_driver.c: 98: LATDbits.LATD2=1;
  1080  000802  848C               	bsf	3980,2,c	;volatile
  1081                           
  1082                           ;lcd_driver.c: 99: Delay_ms(10);
  1083  000804  0E00               	movlw	0
  1084  000806  6E1C               	movwf	Delay_ms@x+1,c
  1085  000808  0E0A               	movlw	10
  1086  00080A  6E1B               	movwf	Delay_ms@x,c
  1087  00080C  ECE0  F002         	call	_Delay_ms	;wreg free
  1088                           
  1089                           ;lcd_driver.c: 100: LATDbits.LATD2=0;
  1090  000810  948C               	bcf	3980,2,c	;volatile
  1091  000812  0012               	return	
  1092  000814                     __end_of_lcdcmd:
  1093                           	opt stack 0
  1094                           tblptru	equ	0xFF8
  1095                           tblptrh	equ	0xFF7
  1096                           tblptrl	equ	0xFF6
  1097                           tablat	equ	0xFF5
  1098                           intcon	equ	0xFF2
  1099                           indf0	equ	0xFEF
  1100                           postinc0	equ	0xFEE
  1101                           fsr0h	equ	0xFEA
  1102                           fsr0l	equ	0xFE9
  1103                           wreg	equ	0xFE8
  1104                           postdec1	equ	0xFE5
  1105                           fsr1l	equ	0xFE1
  1106                           status	equ	0xFD8
  1107                           
  1108 ;; *************** function _Delay_ms *****************
  1109 ;; Defined at:
  1110 ;;		line 115 in file "../lcd_driver.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;  x               2   26[COMRAM] int 
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;  i               2   31[COMRAM] int 
  1115 ;;  j               2   29[COMRAM] int 
  1116 ;; Return value:  Size  Location     Type
  1117 ;;		None               void
  1118 ;; Registers used:
  1119 ;;		wreg, status,2, status,0
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1125 ;;      Params:         2       0       0       0
  1126 ;;      Locals:         4       0       0       0
  1127 ;;      Temps:          1       0       0       0
  1128 ;;      Totals:         7       0       0       0
  1129 ;;Total ram usage:        7 bytes
  1130 ;; Hardware stack levels used:    1
  1131 ;; Hardware stack levels required when called:    5
  1132 ;; This function calls:
  1133 ;;		Nothing
  1134 ;; This function is called by:
  1135 ;;		_lcdcmd
  1136 ;;		_lcddata
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140                           	psect	text9
  1141  0005C0                     __ptext9:
  1142                           	opt stack 0
  1143  0005C0                     _Delay_ms:
  1144                           	opt stack 22
  1145                           
  1146                           ;lcd_driver.c: 117: int i,j;
  1147                           ;lcd_driver.c: 118: for (i=0;i<=5;i++)
  1148                           
  1149                           ;incstack = 0
  1150  0005C0  0E00               	movlw	0
  1151  0005C2  6E21               	movwf	Delay_ms@i+1,c
  1152  0005C4  0E00               	movlw	0
  1153  0005C6  6E20               	movwf	Delay_ms@i,c
  1154  0005C8  5021               	movf	Delay_ms@i+1,w,c
  1155  0005CA  0A80               	xorlw	128
  1156  0005CC  0F80               	addlw	-128
  1157  0005CE  0E06               	movlw	6
  1158  0005D0  B4D8               	btfsc	status,2,c
  1159  0005D2  5C20               	subwf	Delay_ms@i,w,c
  1160  0005D4  B0D8               	btfsc	status,0,c
  1161  0005D6  D014               	goto	l66
  1162                           
  1163                           ;lcd_driver.c: 119: {
  1164                           ;lcd_driver.c: 120: for(j=0;j<x;j++);
  1165  0005D8  0E00               	movlw	0
  1166  0005DA  6E1F               	movwf	Delay_ms@j+1,c
  1167  0005DC  0E00               	movlw	0
  1168  0005DE  6E1E               	movwf	Delay_ms@j,c
  1169  0005E0  D002               	goto	l804
  1170  0005E2                     l802:
  1171  0005E2  4A1E               	infsnz	Delay_ms@j,f,c
  1172  0005E4  2A1F               	incf	Delay_ms@j+1,f,c
  1173  0005E6                     l804:
  1174  0005E6  501F               	movf	Delay_ms@j+1,w,c
  1175  0005E8  0A80               	xorlw	128
  1176  0005EA  6E1D               	movwf	??_Delay_ms& (0+255),c
  1177  0005EC  501B               	movf	Delay_ms@x,w,c
  1178  0005EE  5C1E               	subwf	Delay_ms@j,w,c
  1179  0005F0  501C               	movf	Delay_ms@x+1,w,c
  1180  0005F2  0A80               	xorlw	128
  1181  0005F4  581D               	subwfb	??_Delay_ms& (0+255),w,c
  1182  0005F6  A0D8               	btfss	status,0,c
  1183  0005F8  D7F4               	goto	l802
  1184  0005FA  4A20               	infsnz	Delay_ms@i,f,c
  1185  0005FC  2A21               	incf	Delay_ms@i+1,f,c
  1186  0005FE  D7E4               	goto	L1
  1187  000600                     l66:
  1188  000600  0012               	return	
  1189  000602                     __end_of_Delay_ms:
  1190                           	opt stack 0
  1191                           tblptru	equ	0xFF8
  1192                           tblptrh	equ	0xFF7
  1193                           tblptrl	equ	0xFF6
  1194                           tablat	equ	0xFF5
  1195                           intcon	equ	0xFF2
  1196                           indf0	equ	0xFEF
  1197                           postinc0	equ	0xFEE
  1198                           fsr0h	equ	0xFEA
  1199                           fsr0l	equ	0xFE9
  1200                           wreg	equ	0xFE8
  1201                           postdec1	equ	0xFE5
  1202                           fsr1l	equ	0xFE1
  1203                           status	equ	0xFD8
  1204                           
  1205 ;; *************** function _SetupClock *****************
  1206 ;; Defined at:
  1207 ;;		line 46 in file "../uart.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;		None
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;		None
  1212 ;; Return value:  Size  Location     Type
  1213 ;;		None               void
  1214 ;; Registers used:
  1215 ;;		None
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1221 ;;      Params:         0       0       0       0
  1222 ;;      Locals:         0       0       0       0
  1223 ;;      Temps:          0       0       0       0
  1224 ;;      Totals:         0       0       0       0
  1225 ;;Total ram usage:        0 bytes
  1226 ;; Hardware stack levels used:    1
  1227 ;; Hardware stack levels required when called:    5
  1228 ;; This function calls:
  1229 ;;		Nothing
  1230 ;; This function is called by:
  1231 ;;		_main
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           
  1235                           	psect	text10
  1236  000876                     __ptext10:
  1237                           	opt stack 0
  1238  000876                     _SetupClock:
  1239                           	opt stack 25
  1240                           
  1241                           ;uart.c: 48: OSCCONbits.IRCF0 = 1;
  1242                           
  1243                           ;incstack = 0
  1244  000876  88D3               	bsf	4051,4,c	;volatile
  1245                           
  1246                           ;uart.c: 49: OSCCONbits.IRCF1 = 1;
  1247  000878  8AD3               	bsf	4051,5,c	;volatile
  1248                           
  1249                           ;uart.c: 50: OSCCONbits.IRCF2 = 1;
  1250  00087A  8CD3               	bsf	4051,6,c	;volatile
  1251  00087C  0012               	return	
  1252  00087E                     __end_of_SetupClock:
  1253                           	opt stack 0
  1254                           tblptru	equ	0xFF8
  1255                           tblptrh	equ	0xFF7
  1256                           tblptrl	equ	0xFF6
  1257                           tablat	equ	0xFF5
  1258                           intcon	equ	0xFF2
  1259                           indf0	equ	0xFEF
  1260                           postinc0	equ	0xFEE
  1261                           fsr0h	equ	0xFEA
  1262                           fsr0l	equ	0xFE9
  1263                           wreg	equ	0xFE8
  1264                           postdec1	equ	0xFE5
  1265                           fsr1l	equ	0xFE1
  1266                           status	equ	0xFD8
  1267                           
  1268 ;; *************** function _OpenUSART *****************
  1269 ;; Defined at:
  1270 ;;		line 73 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\USART\uopen.c"
  1271 ;; Parameters:    Size  Location     Type
  1272 ;;  config          1    wreg     unsigned char 
  1273 ;;  spbrg           2   26[COMRAM] unsigned int 
  1274 ;; Auto vars:     Size  Location     Type
  1275 ;;  config          1   31[COMRAM] unsigned char 
  1276 ;; Return value:  Size  Location     Type
  1277 ;;		None               void
  1278 ;; Registers used:
  1279 ;;		wreg, status,2
  1280 ;; Tracked objects:
  1281 ;;		On entry : 0/0
  1282 ;;		On exit  : 0/0
  1283 ;;		Unchanged: 0/0
  1284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1285 ;;      Params:         2       0       0       0
  1286 ;;      Locals:         1       0       0       0
  1287 ;;      Temps:          3       0       0       0
  1288 ;;      Totals:         6       0       0       0
  1289 ;;Total ram usage:        6 bytes
  1290 ;; Hardware stack levels used:    1
  1291 ;; Hardware stack levels required when called:    5
  1292 ;; This function calls:
  1293 ;;		Nothing
  1294 ;; This function is called by:
  1295 ;;		_main
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299                           	psect	text11
  1300  000472                     __ptext11:
  1301                           	opt stack 0
  1302  000472                     _OpenUSART:
  1303                           	opt stack 25
  1304                           
  1305                           ;incstack = 0
  1306                           ;OpenUSART@config stored from wreg
  1307  000472  6E20               	movwf	OpenUSART@config,c
  1308  000474  0E00               	movlw	0
  1309  000476  6EAC               	movwf	4012,c	;volatile
  1310  000478  0E00               	movlw	0
  1311  00047A  6EAB               	movwf	4011,c	;volatile
  1312  00047C  B020               	btfsc	OpenUSART@config,0,c
  1313  00047E  88AC               	bsf	4012,4,c	;volatile
  1314  000480  A220               	btfss	OpenUSART@config,1,c
  1315  000482  D002               	goto	l936
  1316  000484  8CAC               	bsf	4012,6,c	;volatile
  1317  000486  8CAB               	bsf	4011,6,c	;volatile
  1318  000488                     l936:
  1319  000488  B420               	btfsc	OpenUSART@config,2,c
  1320  00048A  8EAC               	bsf	4012,7,c	;volatile
  1321  00048C  A620               	btfss	OpenUSART@config,3,c
  1322  00048E  D002               	goto	l163
  1323  000490  88AB               	bsf	4011,4,c	;volatile
  1324  000492  D001               	goto	l944
  1325  000494                     l163:
  1326  000494  8AAB               	bsf	4011,5,c	;volatile
  1327  000496                     l944:
  1328  000496  B820               	btfsc	OpenUSART@config,4,c
  1329  000498  84AC               	bsf	4012,2,c	;volatile
  1330  00049A  989E               	bcf	3998,4,c	;volatile
  1331  00049C  BA20               	btfsc	OpenUSART@config,5,c
  1332  00049E  86AB               	bsf	4011,3,c	;volatile
  1333  0004A0  AC20               	btfss	OpenUSART@config,6,c
  1334  0004A2  D002               	goto	l167
  1335  0004A4  8A9D               	bsf	3997,5,c	;volatile
  1336  0004A6  D001               	goto	l168
  1337  0004A8                     l167:
  1338  0004A8  9A9D               	bcf	3997,5,c	;volatile
  1339  0004AA                     l168:
  1340  0004AA  9A9E               	bcf	3998,5,c	;volatile
  1341  0004AC  AE20               	btfss	OpenUSART@config,7,c
  1342  0004AE  D002               	goto	l169
  1343  0004B0  889D               	bsf	3997,4,c	;volatile
  1344  0004B2  D001               	goto	l170
  1345  0004B4                     l169:
  1346  0004B4  989D               	bcf	3997,4,c	;volatile
  1347  0004B6                     l170:
  1348  0004B6  C01B  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  1349  0004BA  C01C  F01D         	movff	OpenUSART@spbrg+1,??_OpenUSART
  1350  0004BE  C01D  F01E         	movff	??_OpenUSART,??_OpenUSART+1
  1351  0004C2  6A1F               	clrf	(??_OpenUSART+2)& (0+255),c
  1352  0004C4  501E               	movf	??_OpenUSART+1,w,c
  1353  0004C6  6EB0               	movwf	4016,c	;volatile
  1354  0004C8  8AAC               	bsf	4012,5,c	;volatile
  1355  0004CA  8EAB               	bsf	4011,7,c	;volatile
  1356  0004CC  9C94               	bcf	3988,6,c	;volatile
  1357  0004CE  8E94               	bsf	3988,7,c	;volatile
  1358  0004D0  B8AC               	btfsc	4012,4,c	;volatile
  1359  0004D2  BEAC               	btfsc	4012,7,c	;volatile
  1360  0004D4  D001               	goto	l172
  1361  0004D6  8C94               	bsf	3988,6,c	;volatile
  1362  0004D8                     l172:
  1363  0004D8  0012               	return	
  1364  0004DA                     __end_of_OpenUSART:
  1365                           	opt stack 0
  1366                           tblptru	equ	0xFF8
  1367                           tblptrh	equ	0xFF7
  1368                           tblptrl	equ	0xFF6
  1369                           tablat	equ	0xFF5
  1370                           intcon	equ	0xFF2
  1371                           indf0	equ	0xFEF
  1372                           postinc0	equ	0xFEE
  1373                           fsr0h	equ	0xFEA
  1374                           fsr0l	equ	0xFE9
  1375                           wreg	equ	0xFE8
  1376                           postdec1	equ	0xFE5
  1377                           fsr1l	equ	0xFE1
  1378                           status	equ	0xFD8
  1379                           
  1380 ;; *************** function _SerialRxPinInterrupt *****************
  1381 ;; Defined at:
  1382 ;;		line 53 in file "../uart.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;		None
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;		None
  1387 ;; Return value:  Size  Location     Type
  1388 ;;		None               void
  1389 ;; Registers used:
  1390 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1396 ;;      Params:         0       0       0       0
  1397 ;;      Locals:         0       0       0       0
  1398 ;;      Temps:         14       0       0       0
  1399 ;;      Totals:        14       0       0       0
  1400 ;;Total ram usage:       14 bytes
  1401 ;; Hardware stack levels used:    1
  1402 ;; Hardware stack levels required when called:    4
  1403 ;; This function calls:
  1404 ;;		_ReadUSART
  1405 ;;		_putsUSART
  1406 ;;		i2_lcd_goto
  1407 ;;		i2_lcd_puts
  1408 ;; This function is called by:
  1409 ;;		Interrupt level 2
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           	psect	intcode
  1414  000008                     __pintcode:
  1415                           	opt stack 0
  1416  000008                     _SerialRxPinInterrupt:
  1417                           	opt stack 22
  1418                           
  1419                           ;incstack = 0
  1420  000008  CFFA F00D          	movff	pclath,??_SerialRxPinInterrupt
  1421  00000C  CFFB F00E          	movff	pclatu,??_SerialRxPinInterrupt+1
  1422  000010  CFE9 F00F          	movff	fsr0l,??_SerialRxPinInterrupt+2
  1423  000014  ED84  F001         	call	int_func,f	;refresh shadow registers
  1424                           pclatu	equ	0xFFB
  1425                           pclath	equ	0xFFA
  1426                           tblptru	equ	0xFF8
  1427                           tblptrh	equ	0xFF7
  1428                           tblptrl	equ	0xFF6
  1429                           tablat	equ	0xFF5
  1430                           intcon	equ	0xFF2
  1431                           indf0	equ	0xFEF
  1432                           postinc0	equ	0xFEE
  1433                           fsr0h	equ	0xFEA
  1434                           fsr0l	equ	0xFE9
  1435                           wreg	equ	0xFE8
  1436                           postdec1	equ	0xFE5
  1437                           fsr1l	equ	0xFE1
  1438                           status	equ	0xFD8
  1439                           
  1440                           	psect	intcode_body
  1441  000308                     __pintcode_body:
  1442                           	opt stack 22
  1443  000308                     int_func:
  1444                           	opt stack 22
  1445  000308  0006               	pop		; remove dummy address from shadow register refresh
  1446  00030A  CFEA F010          	movff	fsr0h,??_SerialRxPinInterrupt+3
  1447  00030E  CFE1 F011          	movff	fsr1l,??_SerialRxPinInterrupt+4
  1448  000312  CFE2 F012          	movff	fsr1h,??_SerialRxPinInterrupt+5
  1449  000316  CFD9 F013          	movff	fsr2l,??_SerialRxPinInterrupt+6
  1450  00031A  CFDA F014          	movff	fsr2h,??_SerialRxPinInterrupt+7
  1451  00031E  CFF3 F015          	movff	prodl,??_SerialRxPinInterrupt+8
  1452  000322  CFF4 F016          	movff	prodh,??_SerialRxPinInterrupt+9
  1453  000326  CFF6 F017          	movff	tblptrl,??_SerialRxPinInterrupt+10
  1454  00032A  CFF7 F018          	movff	tblptrh,??_SerialRxPinInterrupt+11
  1455  00032E  CFF8 F019          	movff	tblptru,??_SerialRxPinInterrupt+12
  1456  000332  CFF5 F01A          	movff	tablat,??_SerialRxPinInterrupt+13
  1457                           
  1458                           ;uart.c: 56: if(PIR1bits.RCIF == 1)
  1459  000336  AA9E               	btfss	3998,5,c	;volatile
  1460  000338  D07F               	goto	i2l135
  1461                           
  1462                           ;uart.c: 57: {
  1463                           ;uart.c: 58: if(i<200)
  1464  00033A  503F               	movf	_i+1,w,c
  1465  00033C  0A80               	xorlw	128
  1466  00033E  6EF3               	movwf	prodl,c
  1467  000340  0E80               	movlw	128
  1468  000342  5CF3               	subwf	prodl,w,c
  1469  000344  0EC8               	movlw	200
  1470  000346  B4D8               	btfsc	status,2,c
  1471  000348  5C3E               	subwf	_i,w,c
  1472  00034A  B0D8               	btfsc	status,0,c
  1473  00034C  D046               	goto	i2l1226
  1474                           
  1475                           ;uart.c: 59: {
  1476                           ;uart.c: 60: MessageBuffer[i] = ReadUSART();
  1477  00034E  0101               	movlb	1	; () banked
  1478  000350  0E00               	movlw	low _MessageBuffer
  1479  000352  243E               	addwf	_i,w,c
  1480  000354  6ED9               	movwf	fsr2l,c
  1481  000356  0101               	movlb	1	; () banked
  1482  000358  0E01               	movlw	high _MessageBuffer
  1483  00035A  203F               	addwfc	_i+1,w,c
  1484  00035C  6EDA               	movwf	fsr2h,c
  1485  00035E  ECE1  F003         	call	_ReadUSART	;wreg free
  1486  000362  6EDF               	movwf	indf2,c
  1487                           
  1488                           ;uart.c: 61: if(MessageBuffer[i] == 0x0D)
  1489  000364  0101               	movlb	1	; () banked
  1490  000366  0E00               	movlw	low _MessageBuffer
  1491  000368  243E               	addwf	_i,w,c
  1492  00036A  6ED9               	movwf	fsr2l,c
  1493  00036C  0101               	movlb	1	; () banked
  1494  00036E  0E01               	movlw	high _MessageBuffer
  1495  000370  203F               	addwfc	_i+1,w,c
  1496  000372  6EDA               	movwf	fsr2h,c
  1497  000374  0E0D               	movlw	13
  1498  000376  62DF               	cpfseq	indf2,c
  1499  000378  D02C               	goto	i2l1222
  1500                           
  1501                           ; BSR set to: 1
  1502                           ;uart.c: 62: {
  1503                           ;uart.c: 63: putsUSART(MessageBuffer);
  1504  00037A  0101               	movlb	1	; () banked
  1505  00037C  0E01               	movlw	high _MessageBuffer
  1506  00037E  6E03               	movwf	putsUSART@data+1,c
  1507  000380  0101               	movlb	1	; () banked
  1508  000382  0E00               	movlw	low _MessageBuffer
  1509  000384  6E02               	movwf	putsUSART@data,c
  1510  000386  EC92  F003         	call	_putsUSART	;wreg free
  1511                           
  1512                           ;uart.c: 64: lcd_goto(21);
  1513  00038A  0E15               	movlw	21
  1514  00038C  EC5E  F003         	call	i2_lcd_goto
  1515                           
  1516                           ;uart.c: 65: lcd_puts(MessageBuffer);
  1517  000390  0101               	movlb	1	; () banked
  1518  000392  0E01               	movlw	high _MessageBuffer
  1519  000394  6E0C               	movwf	i2lcd_puts@p+1,c
  1520  000396  0101               	movlb	1	; () banked
  1521  000398  0E00               	movlw	low _MessageBuffer
  1522  00039A  6E0B               	movwf	i2lcd_puts@p,c
  1523  00039C  EC96  F002         	call	i2_lcd_puts	;wreg free
  1524                           
  1525                           ;uart.c: 66: for(;i>0;i--)
  1526  0003A0  D00D               	goto	i2l1216
  1527  0003A2                     i2l1212:
  1528                           
  1529                           ;uart.c: 67: MessageBuffer[i] = 0x00;
  1530  0003A2  0101               	movlb	1	; () banked
  1531  0003A4  0E00               	movlw	low _MessageBuffer
  1532  0003A6  243E               	addwf	_i,w,c
  1533  0003A8  6ED9               	movwf	fsr2l,c
  1534  0003AA  0101               	movlb	1	; () banked
  1535  0003AC  0E01               	movlw	high _MessageBuffer
  1536  0003AE  203F               	addwfc	_i+1,w,c
  1537  0003B0  6EDA               	movwf	fsr2h,c
  1538  0003B2  0E00               	movlw	0
  1539  0003B4  6EDF               	movwf	indf2,c
  1540                           
  1541                           ; BSR set to: 1
  1542  0003B6  063E               	decf	_i,f,c
  1543  0003B8  A0D8               	btfss	status,0,c
  1544  0003BA  063F               	decf	_i+1,f,c
  1545  0003BC                     i2l1216:
  1546  0003BC  503F               	movf	_i+1,w,c
  1547  0003BE  0A80               	xorlw	128
  1548  0003C0  6EF3               	movwf	prodl,c
  1549  0003C2  0E80               	movlw	128
  1550  0003C4  5CF3               	subwf	prodl,w,c
  1551  0003C6  0E01               	movlw	1
  1552  0003C8  B4D8               	btfsc	status,2,c
  1553  0003CA  5C3E               	subwf	_i,w,c
  1554  0003CC  B0D8               	btfsc	status,0,c
  1555  0003CE  D7E9               	goto	i2l1212
  1556  0003D0  D02F               	goto	i2l1238
  1557  0003D2                     i2l1222:
  1558                           
  1559                           ;uart.c: 70: }
  1560                           ;uart.c: 71: i++;
  1561  0003D2  4A3E               	infsnz	_i,f,c
  1562  0003D4  2A3F               	incf	_i+1,f,c
  1563                           
  1564                           ;uart.c: 72: PIR1bits.RCIF = 0;
  1565  0003D6  9A9E               	bcf	3998,5,c	;volatile
  1566                           
  1567                           ;uart.c: 73: }
  1568  0003D8  D02F               	goto	i2l135
  1569  0003DA                     i2l1226:
  1570                           
  1571                           ;uart.c: 74: else
  1572                           ;uart.c: 75: {
  1573                           ;uart.c: 76: putsUSART(MessageBuffer);
  1574  0003DA  0101               	movlb	1	; () banked
  1575  0003DC  0E01               	movlw	high _MessageBuffer
  1576  0003DE  6E03               	movwf	putsUSART@data+1,c
  1577  0003E0  0101               	movlb	1	; () banked
  1578  0003E2  0E00               	movlw	low _MessageBuffer
  1579  0003E4  6E02               	movwf	putsUSART@data,c
  1580  0003E6  EC92  F003         	call	_putsUSART	;wreg free
  1581                           
  1582                           ;uart.c: 77: lcd_goto(21);
  1583  0003EA  0E15               	movlw	21
  1584  0003EC  EC5E  F003         	call	i2_lcd_goto
  1585                           
  1586                           ;uart.c: 78: lcd_puts(MessageBuffer);
  1587  0003F0  0101               	movlb	1	; () banked
  1588  0003F2  0E01               	movlw	high _MessageBuffer
  1589  0003F4  6E0C               	movwf	i2lcd_puts@p+1,c
  1590  0003F6  0101               	movlb	1	; () banked
  1591  0003F8  0E00               	movlw	low _MessageBuffer
  1592  0003FA  6E0B               	movwf	i2lcd_puts@p,c
  1593  0003FC  EC96  F002         	call	i2_lcd_puts	;wreg free
  1594                           
  1595                           ;uart.c: 79: for(;i>0;i--)
  1596  000400  D00D               	goto	i2l1236
  1597  000402                     i2l1232:
  1598                           
  1599                           ;uart.c: 80: MessageBuffer[i] = 0x00;
  1600  000402  0101               	movlb	1	; () banked
  1601  000404  0E00               	movlw	low _MessageBuffer
  1602  000406  243E               	addwf	_i,w,c
  1603  000408  6ED9               	movwf	fsr2l,c
  1604  00040A  0101               	movlb	1	; () banked
  1605  00040C  0E01               	movlw	high _MessageBuffer
  1606  00040E  203F               	addwfc	_i+1,w,c
  1607  000410  6EDA               	movwf	fsr2h,c
  1608  000412  0E00               	movlw	0
  1609  000414  6EDF               	movwf	indf2,c
  1610                           
  1611                           ; BSR set to: 1
  1612  000416  063E               	decf	_i,f,c
  1613  000418  A0D8               	btfss	status,0,c
  1614  00041A  063F               	decf	_i+1,f,c
  1615  00041C                     i2l1236:
  1616  00041C  503F               	movf	_i+1,w,c
  1617  00041E  0A80               	xorlw	128
  1618  000420  6EF3               	movwf	prodl,c
  1619  000422  0E80               	movlw	128
  1620  000424  5CF3               	subwf	prodl,w,c
  1621  000426  0E01               	movlw	1
  1622  000428  B4D8               	btfsc	status,2,c
  1623  00042A  5C3E               	subwf	_i,w,c
  1624  00042C  B0D8               	btfsc	status,0,c
  1625  00042E  D7E9               	goto	i2l1232
  1626  000430                     i2l1238:
  1627                           
  1628                           ;uart.c: 81: i=0;
  1629  000430  0E00               	movlw	0
  1630  000432  6E3F               	movwf	_i+1,c
  1631  000434  0E00               	movlw	0
  1632  000436  6E3E               	movwf	_i,c
  1633  000438                     i2l135:
  1634  000438  C01A  FFF5         	movff	??_SerialRxPinInterrupt+13,tablat
  1635  00043C  C019  FFF8         	movff	??_SerialRxPinInterrupt+12,tblptru
  1636  000440  C018  FFF7         	movff	??_SerialRxPinInterrupt+11,tblptrh
  1637  000444  C017  FFF6         	movff	??_SerialRxPinInterrupt+10,tblptrl
  1638  000448  C016  FFF4         	movff	??_SerialRxPinInterrupt+9,prodh
  1639  00044C  C015  FFF3         	movff	??_SerialRxPinInterrupt+8,prodl
  1640  000450  C014  FFDA         	movff	??_SerialRxPinInterrupt+7,fsr2h
  1641  000454  C013  FFD9         	movff	??_SerialRxPinInterrupt+6,fsr2l
  1642  000458  C012  FFE2         	movff	??_SerialRxPinInterrupt+5,fsr1h
  1643  00045C  C011  FFE1         	movff	??_SerialRxPinInterrupt+4,fsr1l
  1644  000460  C010  FFEA         	movff	??_SerialRxPinInterrupt+3,fsr0h
  1645  000464  C00F  FFE9         	movff	??_SerialRxPinInterrupt+2,fsr0l
  1646  000468  C00E  FFFB         	movff	??_SerialRxPinInterrupt+1,pclatu
  1647  00046C  C00D  FFFA         	movff	??_SerialRxPinInterrupt,pclath
  1648  000470  0011               	retfie		f
  1649  000472                     __end_of_SerialRxPinInterrupt:
  1650                           	opt stack 0
  1651                           pclatu	equ	0xFFB
  1652                           pclath	equ	0xFFA
  1653                           tblptru	equ	0xFF8
  1654                           tblptrh	equ	0xFF7
  1655                           tblptrl	equ	0xFF6
  1656                           tablat	equ	0xFF5
  1657                           prodh	equ	0xFF4
  1658                           prodl	equ	0xFF3
  1659                           intcon	equ	0xFF2
  1660                           indf0	equ	0xFEF
  1661                           postinc0	equ	0xFEE
  1662                           fsr0h	equ	0xFEA
  1663                           fsr0l	equ	0xFE9
  1664                           wreg	equ	0xFE8
  1665                           postdec1	equ	0xFE5
  1666                           fsr1h	equ	0xFE2
  1667                           fsr1l	equ	0xFE1
  1668                           indf2	equ	0xFDF
  1669                           fsr2h	equ	0xFDA
  1670                           fsr2l	equ	0xFD9
  1671                           status	equ	0xFD8
  1672                           
  1673 ;; *************** function i2_lcd_puts *****************
  1674 ;; Defined at:
  1675 ;;		line 124 in file "../lcd_driver.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;  p               2   10[COMRAM] PTR const unsigned char 
  1678 ;;		 -> MessageBuffer(200), STR_1(6), 
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;		None
  1681 ;; Return value:  Size  Location     Type
  1682 ;;		None               void
  1683 ;; Registers used:
  1684 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1690 ;;      Params:         2       0       0       0
  1691 ;;      Locals:         0       0       0       0
  1692 ;;      Temps:          0       0       0       0
  1693 ;;      Totals:         2       0       0       0
  1694 ;;Total ram usage:        2 bytes
  1695 ;; Hardware stack levels used:    1
  1696 ;; Hardware stack levels required when called:    3
  1697 ;; This function calls:
  1698 ;;		i2_dis_data
  1699 ;; This function is called by:
  1700 ;;		_SerialRxPinInterrupt
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704                           	psect	text13
  1705  00052C                     __ptext13:
  1706                           	opt stack 0
  1707  00052C                     i2_lcd_puts:
  1708                           	opt stack 22
  1709                           
  1710                           ;lcd_driver.c: 126: while(*p != '\0'){
  1711                           
  1712                           ;incstack = 0
  1713  00052C  D014               	goto	i2l1182
  1714  00052E                     i2l1178:
  1715                           
  1716                           ;lcd_driver.c: 127: dis_data(*p);
  1717  00052E  C00B  FFF6         	movff	i2lcd_puts@p,tblptrl
  1718  000532  C00C  FFF7         	movff	i2lcd_puts@p+1,tblptrh
  1719  000536  6AF8               	clrf	tblptru,c
  1720  000538  0E02               	movlw	(high __ramtop+-1)
  1721  00053A  64F7               	cpfsgt	tblptrh,c
  1722  00053C  D003               	bra	i2u50_47
  1723  00053E  0008               	tblrd		*
  1724  000540  50F5               	movf	tablat,w,c
  1725  000542  D005               	bra	i2u50_40
  1726  000544                     i2u50_47:
  1727  000544  CFF6 FFE9          	movff	tblptrl,fsr0l
  1728  000548  CFF7 FFEA          	movff	tblptrh,fsr0h
  1729  00054C  50EF               	movf	indf0,w,c
  1730  00054E                     i2u50_40:
  1731  00054E  ECC3  F003         	call	i2_dis_data
  1732                           
  1733                           ;lcd_driver.c: 128: p++;
  1734  000552  4A0B               	infsnz	i2lcd_puts@p,f,c
  1735  000554  2A0C               	incf	i2lcd_puts@p+1,f,c
  1736  000556                     i2l1182:
  1737  000556  C00B  FFF6         	movff	i2lcd_puts@p,tblptrl
  1738  00055A  C00C  FFF7         	movff	i2lcd_puts@p+1,tblptrh
  1739  00055E  6AF8               	clrf	tblptru,c
  1740  000560  0E02               	movlw	(high __ramtop+-1)
  1741  000562  64F7               	cpfsgt	tblptrh,c
  1742  000564  D003               	bra	i2u51_47
  1743  000566  0008               	tblrd		*
  1744  000568  50F5               	movf	tablat,w,c
  1745  00056A  D005               	bra	i2u51_40
  1746  00056C                     i2u51_47:
  1747  00056C  CFF6 FFE9          	movff	tblptrl,fsr0l
  1748  000570  CFF7 FFEA          	movff	tblptrh,fsr0h
  1749  000574  50EF               	movf	indf0,w,c
  1750  000576                     i2u51_40:
  1751  000576  0900               	iorlw	0
  1752  000578  B4D8               	btfsc	status,2,c
  1753  00057A  0012               	return	
  1754  00057C  D7D8               	goto	i2l1178
  1755  00057E                     __end_ofi2_lcd_puts:
  1756                           	opt stack 0
  1757                           pclatu	equ	0xFFB
  1758                           pclath	equ	0xFFA
  1759                           tblptru	equ	0xFF8
  1760                           tblptrh	equ	0xFF7
  1761                           tblptrl	equ	0xFF6
  1762                           tablat	equ	0xFF5
  1763                           prodh	equ	0xFF4
  1764                           prodl	equ	0xFF3
  1765                           intcon	equ	0xFF2
  1766                           indf0	equ	0xFEF
  1767                           postinc0	equ	0xFEE
  1768                           fsr0h	equ	0xFEA
  1769                           fsr0l	equ	0xFE9
  1770                           wreg	equ	0xFE8
  1771                           postdec1	equ	0xFE5
  1772                           fsr1h	equ	0xFE2
  1773                           fsr1l	equ	0xFE1
  1774                           indf2	equ	0xFDF
  1775                           fsr2h	equ	0xFDA
  1776                           fsr2l	equ	0xFD9
  1777                           status	equ	0xFD8
  1778                           
  1779 ;; *************** function i2_dis_data *****************
  1780 ;; Defined at:
  1781 ;;		line 85 in file "../lcd_driver.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;  data_value      1    wreg     unsigned char 
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;  data_value      1    8[COMRAM] unsigned char 
  1786 ;;  dis_data        1    9[COMRAM] unsigned char 
  1787 ;; Return value:  Size  Location     Type
  1788 ;;		None               void
  1789 ;; Registers used:
  1790 ;;		wreg, status,2, status,0, cstack
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1796 ;;      Params:         0       0       0       0
  1797 ;;      Locals:         2       0       0       0
  1798 ;;      Temps:          0       0       0       0
  1799 ;;      Totals:         2       0       0       0
  1800 ;;Total ram usage:        2 bytes
  1801 ;; Hardware stack levels used:    1
  1802 ;; Hardware stack levels required when called:    2
  1803 ;; This function calls:
  1804 ;;		i2_lcddata
  1805 ;; This function is called by:
  1806 ;;		i2_lcd_puts
  1807 ;; This function uses a non-reentrant model
  1808 ;;
  1809                           
  1810                           	psect	text14
  1811  000786                     __ptext14:
  1812                           	opt stack 0
  1813  000786                     i2_dis_data:
  1814                           	opt stack 22
  1815                           
  1816                           ;incstack = 0
  1817                           ;i2dis_data@data_value stored from wreg
  1818  000786  6E09               	movwf	i2dis_data@data_value,c
  1819                           
  1820                           ;lcd_driver.c: 87: unsigned char data_value1;
  1821                           ;lcd_driver.c: 88: data_value1=(data_value&0xF0);
  1822  000788  5009               	movf	i2dis_data@data_value,w,c
  1823  00078A  0BF0               	andlw	240
  1824  00078C  6E0A               	movwf	i2dis_data@data_value1,c
  1825                           
  1826                           ;lcd_driver.c: 89: lcddata(data_value1);
  1827  00078E  500A               	movf	i2dis_data@data_value1,w,c
  1828  000790  EC0A  F004         	call	i2_lcddata
  1829                           
  1830                           ;lcd_driver.c: 90: data_value1=((data_value<<4)&0xF0);
  1831  000794  3809               	swapf	i2dis_data@data_value,w,c
  1832  000796  0BF0               	andlw	240
  1833  000798  0BF0               	andlw	240
  1834  00079A  6E0A               	movwf	i2dis_data@data_value1,c
  1835                           
  1836                           ;lcd_driver.c: 91: lcddata(data_value1);
  1837  00079C  500A               	movf	i2dis_data@data_value1,w,c
  1838  00079E  EC0A  F004         	call	i2_lcddata
  1839  0007A2  0012               	return	
  1840  0007A4                     __end_ofi2_dis_data:
  1841                           	opt stack 0
  1842                           pclatu	equ	0xFFB
  1843                           pclath	equ	0xFFA
  1844                           tblptru	equ	0xFF8
  1845                           tblptrh	equ	0xFF7
  1846                           tblptrl	equ	0xFF6
  1847                           tablat	equ	0xFF5
  1848                           prodh	equ	0xFF4
  1849                           prodl	equ	0xFF3
  1850                           intcon	equ	0xFF2
  1851                           indf0	equ	0xFEF
  1852                           postinc0	equ	0xFEE
  1853                           fsr0h	equ	0xFEA
  1854                           fsr0l	equ	0xFE9
  1855                           wreg	equ	0xFE8
  1856                           postdec1	equ	0xFE5
  1857                           fsr1h	equ	0xFE2
  1858                           fsr1l	equ	0xFE1
  1859                           indf2	equ	0xFDF
  1860                           fsr2h	equ	0xFDA
  1861                           fsr2l	equ	0xFD9
  1862                           status	equ	0xFD8
  1863                           
  1864 ;; *************** function i2_lcddata *****************
  1865 ;; Defined at:
  1866 ;;		line 103 in file "../lcd_driver.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;  dataout         1    wreg     unsigned char 
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;  dataout         1    7[COMRAM] unsigned char 
  1871 ;; Return value:  Size  Location     Type
  1872 ;;		None               void
  1873 ;; Registers used:
  1874 ;;		wreg, status,2, status,0, cstack
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1880 ;;      Params:         0       0       0       0
  1881 ;;      Locals:         1       0       0       0
  1882 ;;      Temps:          0       0       0       0
  1883 ;;      Totals:         1       0       0       0
  1884 ;;Total ram usage:        1 bytes
  1885 ;; Hardware stack levels used:    1
  1886 ;; Hardware stack levels required when called:    1
  1887 ;; This function calls:
  1888 ;;		i2_Delay_ms
  1889 ;; This function is called by:
  1890 ;;		i2_dis_data
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894                           	psect	text15
  1895  000814                     __ptext15:
  1896                           	opt stack 0
  1897  000814                     i2_lcddata:
  1898                           	opt stack 22
  1899                           
  1900                           ;incstack = 0
  1901                           ;i2lcddata@dataout stored from wreg
  1902  000814  6E08               	movwf	i2lcddata@dataout,c
  1903                           
  1904                           ;lcd_driver.c: 105: LATD=dataout;
  1905  000816  C008  FF8C         	movff	i2lcddata@dataout,3980	;volatile
  1906                           
  1907                           ;lcd_driver.c: 106: LATDbits.LATD3=1;
  1908  00081A  868C               	bsf	3980,3,c	;volatile
  1909                           
  1910                           ;lcd_driver.c: 107: LATDbits.LATD2=1;
  1911  00081C  848C               	bsf	3980,2,c	;volatile
  1912                           
  1913                           ;lcd_driver.c: 108: Delay_ms(10);
  1914  00081E  0E00               	movlw	0
  1915  000820  6E02               	movwf	i2Delay_ms@x+1,c
  1916  000822  0E0A               	movlw	10
  1917  000824  6E01               	movwf	i2Delay_ms@x,c
  1918  000826  EC01  F003         	call	i2_Delay_ms	;wreg free
  1919                           
  1920                           ;lcd_driver.c: 109: LATDbits.LATD2=0;
  1921  00082A  948C               	bcf	3980,2,c	;volatile
  1922  00082C  0012               	return	
  1923  00082E                     __end_ofi2_lcddata:
  1924                           	opt stack 0
  1925                           pclatu	equ	0xFFB
  1926                           pclath	equ	0xFFA
  1927                           tblptru	equ	0xFF8
  1928                           tblptrh	equ	0xFF7
  1929                           tblptrl	equ	0xFF6
  1930                           tablat	equ	0xFF5
  1931                           prodh	equ	0xFF4
  1932                           prodl	equ	0xFF3
  1933                           intcon	equ	0xFF2
  1934                           indf0	equ	0xFEF
  1935                           postinc0	equ	0xFEE
  1936                           fsr0h	equ	0xFEA
  1937                           fsr0l	equ	0xFE9
  1938                           wreg	equ	0xFE8
  1939                           postdec1	equ	0xFE5
  1940                           fsr1h	equ	0xFE2
  1941                           fsr1l	equ	0xFE1
  1942                           indf2	equ	0xFDF
  1943                           fsr2h	equ	0xFDA
  1944                           fsr2l	equ	0xFD9
  1945                           status	equ	0xFD8
  1946                           
  1947 ;; *************** function i2_lcd_goto *****************
  1948 ;; Defined at:
  1949 ;;		line 157 in file "../lcd_driver.c"
  1950 ;; Parameters:    Size  Location     Type
  1951 ;;  cnt             1    wreg     unsigned char 
  1952 ;; Auto vars:     Size  Location     Type
  1953 ;;  cnt             1   10[COMRAM] unsigned char 
  1954 ;; Return value:  Size  Location     Type
  1955 ;;		None               void
  1956 ;; Registers used:
  1957 ;;		wreg, status,2, status,0, cstack
  1958 ;; Tracked objects:
  1959 ;;		On entry : 0/0
  1960 ;;		On exit  : 0/0
  1961 ;;		Unchanged: 0/0
  1962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1963 ;;      Params:         0       0       0       0
  1964 ;;      Locals:         1       0       0       0
  1965 ;;      Temps:          0       0       0       0
  1966 ;;      Totals:         1       0       0       0
  1967 ;;Total ram usage:        1 bytes
  1968 ;; Hardware stack levels used:    1
  1969 ;; Hardware stack levels required when called:    3
  1970 ;; This function calls:
  1971 ;;		i2_dis_cmd
  1972 ;; This function is called by:
  1973 ;;		_SerialRxPinInterrupt
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977                           	psect	text16
  1978  0006BC                     __ptext16:
  1979                           	opt stack 0
  1980  0006BC                     i2_lcd_goto:
  1981                           	opt stack 22
  1982                           
  1983                           ;incstack = 0
  1984                           ;i2lcd_goto@cnt stored from wreg
  1985  0006BC  6E0B               	movwf	i2lcd_goto@cnt,c
  1986                           
  1987                           ;lcd_driver.c: 159: if(cnt > 60)
  1988  0006BE  0E3C               	movlw	60
  1989  0006C0  640B               	cpfsgt	i2lcd_goto@cnt,c
  1990  0006C2  D005               	goto	i2l1188
  1991                           
  1992                           ;lcd_driver.c: 160: dis_cmd(0xD4+(cnt-61));
  1993  0006C4  500B               	movf	i2lcd_goto@cnt,w,c
  1994  0006C6  0F97               	addlw	151
  1995  0006C8  ECD2  F003         	call	i2_dis_cmd
  1996  0006CC  D014               	goto	i2l99
  1997  0006CE                     i2l1188:
  1998                           
  1999                           ;lcd_driver.c: 161: else if(cnt > 40)
  2000  0006CE  0E28               	movlw	40
  2001  0006D0  640B               	cpfsgt	i2lcd_goto@cnt,c
  2002  0006D2  D005               	goto	i2l1192
  2003                           
  2004                           ;lcd_driver.c: 162: dis_cmd(0x94+(cnt-41));
  2005  0006D4  500B               	movf	i2lcd_goto@cnt,w,c
  2006  0006D6  0F6B               	addlw	107
  2007  0006D8  ECD2  F003         	call	i2_dis_cmd
  2008  0006DC  D00C               	goto	i2l99
  2009  0006DE                     i2l1192:
  2010                           
  2011                           ;lcd_driver.c: 163: else if(cnt >20)
  2012  0006DE  0E14               	movlw	20
  2013  0006E0  640B               	cpfsgt	i2lcd_goto@cnt,c
  2014  0006E2  D005               	goto	i2l1196
  2015                           
  2016                           ;lcd_driver.c: 164: dis_cmd(0xC0+(cnt-21));
  2017  0006E4  500B               	movf	i2lcd_goto@cnt,w,c
  2018  0006E6  0FAB               	addlw	171
  2019  0006E8  ECD2  F003         	call	i2_dis_cmd
  2020  0006EC  D004               	goto	i2l99
  2021  0006EE                     i2l1196:
  2022                           
  2023                           ;lcd_driver.c: 165: else
  2024                           ;lcd_driver.c: 166: dis_cmd(0x80+(cnt-1));
  2025  0006EE  500B               	movf	i2lcd_goto@cnt,w,c
  2026  0006F0  0F7F               	addlw	127
  2027  0006F2  ECD2  F003         	call	i2_dis_cmd
  2028  0006F6                     i2l99:
  2029  0006F6  0012               	return	
  2030  0006F8                     __end_ofi2_lcd_goto:
  2031                           	opt stack 0
  2032                           pclatu	equ	0xFFB
  2033                           pclath	equ	0xFFA
  2034                           tblptru	equ	0xFF8
  2035                           tblptrh	equ	0xFF7
  2036                           tblptrl	equ	0xFF6
  2037                           tablat	equ	0xFF5
  2038                           prodh	equ	0xFF4
  2039                           prodl	equ	0xFF3
  2040                           intcon	equ	0xFF2
  2041                           indf0	equ	0xFEF
  2042                           postinc0	equ	0xFEE
  2043                           fsr0h	equ	0xFEA
  2044                           fsr0l	equ	0xFE9
  2045                           wreg	equ	0xFE8
  2046                           postdec1	equ	0xFE5
  2047                           fsr1h	equ	0xFE2
  2048                           fsr1l	equ	0xFE1
  2049                           indf2	equ	0xFDF
  2050                           fsr2h	equ	0xFDA
  2051                           fsr2l	equ	0xFD9
  2052                           status	equ	0xFD8
  2053                           
  2054 ;; *************** function i2_dis_cmd *****************
  2055 ;; Defined at:
  2056 ;;		line 74 in file "../lcd_driver.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;  cmd_value       1    wreg     unsigned char 
  2059 ;; Auto vars:     Size  Location     Type
  2060 ;;  cmd_value       1    8[COMRAM] unsigned char 
  2061 ;;  dis_cmd         1    9[COMRAM] unsigned char 
  2062 ;; Return value:  Size  Location     Type
  2063 ;;		None               void
  2064 ;; Registers used:
  2065 ;;		wreg, status,2, status,0, cstack
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2071 ;;      Params:         0       0       0       0
  2072 ;;      Locals:         2       0       0       0
  2073 ;;      Temps:          0       0       0       0
  2074 ;;      Totals:         2       0       0       0
  2075 ;;Total ram usage:        2 bytes
  2076 ;; Hardware stack levels used:    1
  2077 ;; Hardware stack levels required when called:    2
  2078 ;; This function calls:
  2079 ;;		i2_lcdcmd
  2080 ;; This function is called by:
  2081 ;;		i2_lcd_goto
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           	psect	text17
  2086  0007A4                     __ptext17:
  2087                           	opt stack 0
  2088  0007A4                     i2_dis_cmd:
  2089                           	opt stack 22
  2090                           
  2091                           ;incstack = 0
  2092                           ;i2dis_cmd@cmd_value stored from wreg
  2093  0007A4  6E09               	movwf	i2dis_cmd@cmd_value,c
  2094                           
  2095                           ;lcd_driver.c: 76: unsigned char cmd_value1;
  2096                           ;lcd_driver.c: 77: cmd_value1 = (cmd_value & 0xF0);
  2097  0007A6  5009               	movf	i2dis_cmd@cmd_value,w,c
  2098  0007A8  0BF0               	andlw	240
  2099  0007AA  6E0A               	movwf	i2dis_cmd@cmd_value1,c
  2100                           
  2101                           ;lcd_driver.c: 78: lcdcmd(cmd_value1);
  2102  0007AC  500A               	movf	i2dis_cmd@cmd_value1,w,c
  2103  0007AE  EC17  F004         	call	i2_lcdcmd
  2104                           
  2105                           ;lcd_driver.c: 79: cmd_value1 = ((cmd_value<<4) & 0xF0);
  2106  0007B2  3809               	swapf	i2dis_cmd@cmd_value,w,c
  2107  0007B4  0BF0               	andlw	240
  2108  0007B6  0BF0               	andlw	240
  2109  0007B8  6E0A               	movwf	i2dis_cmd@cmd_value1,c
  2110                           
  2111                           ;lcd_driver.c: 80: lcdcmd(cmd_value1);
  2112  0007BA  500A               	movf	i2dis_cmd@cmd_value1,w,c
  2113  0007BC  EC17  F004         	call	i2_lcdcmd
  2114  0007C0  0012               	return	
  2115  0007C2                     __end_ofi2_dis_cmd:
  2116                           	opt stack 0
  2117                           pclatu	equ	0xFFB
  2118                           pclath	equ	0xFFA
  2119                           tblptru	equ	0xFF8
  2120                           tblptrh	equ	0xFF7
  2121                           tblptrl	equ	0xFF6
  2122                           tablat	equ	0xFF5
  2123                           prodh	equ	0xFF4
  2124                           prodl	equ	0xFF3
  2125                           intcon	equ	0xFF2
  2126                           indf0	equ	0xFEF
  2127                           postinc0	equ	0xFEE
  2128                           fsr0h	equ	0xFEA
  2129                           fsr0l	equ	0xFE9
  2130                           wreg	equ	0xFE8
  2131                           postdec1	equ	0xFE5
  2132                           fsr1h	equ	0xFE2
  2133                           fsr1l	equ	0xFE1
  2134                           indf2	equ	0xFDF
  2135                           fsr2h	equ	0xFDA
  2136                           fsr2l	equ	0xFD9
  2137                           status	equ	0xFD8
  2138                           
  2139 ;; *************** function i2_lcdcmd *****************
  2140 ;; Defined at:
  2141 ;;		line 94 in file "../lcd_driver.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;  cmdout          1    wreg     unsigned char 
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;  cmdout          1    7[COMRAM] unsigned char 
  2146 ;; Return value:  Size  Location     Type
  2147 ;;		None               void
  2148 ;; Registers used:
  2149 ;;		wreg, status,2, status,0, cstack
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2155 ;;      Params:         0       0       0       0
  2156 ;;      Locals:         1       0       0       0
  2157 ;;      Temps:          0       0       0       0
  2158 ;;      Totals:         1       0       0       0
  2159 ;;Total ram usage:        1 bytes
  2160 ;; Hardware stack levels used:    1
  2161 ;; Hardware stack levels required when called:    1
  2162 ;; This function calls:
  2163 ;;		i2_Delay_ms
  2164 ;; This function is called by:
  2165 ;;		i2_dis_cmd
  2166 ;; This function uses a non-reentrant model
  2167 ;;
  2168                           
  2169                           	psect	text18
  2170  00082E                     __ptext18:
  2171                           	opt stack 0
  2172  00082E                     i2_lcdcmd:
  2173                           	opt stack 22
  2174                           
  2175                           ;incstack = 0
  2176                           ;i2lcdcmd@cmdout stored from wreg
  2177  00082E  6E08               	movwf	i2lcdcmd@cmdout,c
  2178                           
  2179                           ;lcd_driver.c: 96: LATD=cmdout;
  2180  000830  C008  FF8C         	movff	i2lcdcmd@cmdout,3980	;volatile
  2181                           
  2182                           ;lcd_driver.c: 97: LATDbits.LATD3=0;
  2183  000834  968C               	bcf	3980,3,c	;volatile
  2184                           
  2185                           ;lcd_driver.c: 98: LATDbits.LATD2=1;
  2186  000836  848C               	bsf	3980,2,c	;volatile
  2187                           
  2188                           ;lcd_driver.c: 99: Delay_ms(10);
  2189  000838  0E00               	movlw	0
  2190  00083A  6E02               	movwf	i2Delay_ms@x+1,c
  2191  00083C  0E0A               	movlw	10
  2192  00083E  6E01               	movwf	i2Delay_ms@x,c
  2193  000840  EC01  F003         	call	i2_Delay_ms	;wreg free
  2194                           
  2195                           ;lcd_driver.c: 100: LATDbits.LATD2=0;
  2196  000844  948C               	bcf	3980,2,c	;volatile
  2197  000846  0012               	return	
  2198  000848                     __end_ofi2_lcdcmd:
  2199                           	opt stack 0
  2200                           pclatu	equ	0xFFB
  2201                           pclath	equ	0xFFA
  2202                           tblptru	equ	0xFF8
  2203                           tblptrh	equ	0xFF7
  2204                           tblptrl	equ	0xFF6
  2205                           tablat	equ	0xFF5
  2206                           prodh	equ	0xFF4
  2207                           prodl	equ	0xFF3
  2208                           intcon	equ	0xFF2
  2209                           indf0	equ	0xFEF
  2210                           postinc0	equ	0xFEE
  2211                           fsr0h	equ	0xFEA
  2212                           fsr0l	equ	0xFE9
  2213                           wreg	equ	0xFE8
  2214                           postdec1	equ	0xFE5
  2215                           fsr1h	equ	0xFE2
  2216                           fsr1l	equ	0xFE1
  2217                           indf2	equ	0xFDF
  2218                           fsr2h	equ	0xFDA
  2219                           fsr2l	equ	0xFD9
  2220                           status	equ	0xFD8
  2221                           
  2222 ;; *************** function i2_Delay_ms *****************
  2223 ;; Defined at:
  2224 ;;		line 115 in file "../lcd_driver.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;  x               2    0[COMRAM] int 
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;  Delay_ms        2    5[COMRAM] int 
  2229 ;;  Delay_ms        2    3[COMRAM] int 
  2230 ;; Return value:  Size  Location     Type
  2231 ;;		None               void
  2232 ;; Registers used:
  2233 ;;		wreg, status,2, status,0
  2234 ;; Tracked objects:
  2235 ;;		On entry : 0/0
  2236 ;;		On exit  : 0/0
  2237 ;;		Unchanged: 0/0
  2238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2239 ;;      Params:         2       0       0       0
  2240 ;;      Locals:         4       0       0       0
  2241 ;;      Temps:          1       0       0       0
  2242 ;;      Totals:         7       0       0       0
  2243 ;;Total ram usage:        7 bytes
  2244 ;; Hardware stack levels used:    1
  2245 ;; This function calls:
  2246 ;;		Nothing
  2247 ;; This function is called by:
  2248 ;;		i2_lcdcmd
  2249 ;;		i2_lcddata
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           	psect	text19
  2254  000602                     __ptext19:
  2255                           	opt stack 0
  2256  000602                     i2_Delay_ms:
  2257                           	opt stack 22
  2258                           
  2259                           ;lcd_driver.c: 117: int i,j;
  2260                           ;lcd_driver.c: 118: for (i=0;i<=5;i++)
  2261                           
  2262                           ;incstack = 0
  2263  000602  0E00               	movlw	0
  2264  000604  6E07               	movwf	i2Delay_ms@i+1,c
  2265  000606  0E00               	movlw	0
  2266  000608  6E06               	movwf	i2Delay_ms@i,c
  2267  00060A  5007               	movf	i2Delay_ms@i+1,w,c
  2268  00060C  0A80               	xorlw	128
  2269  00060E  0F80               	addlw	-128
  2270  000610  0E06               	movlw	6
  2271  000612  B4D8               	btfsc	status,2,c
  2272  000614  5C06               	subwf	i2Delay_ms@i,w,c
  2273  000616  B0D8               	btfsc	status,0,c
  2274  000618  D014               	goto	i2l66
  2275                           
  2276                           ;lcd_driver.c: 119: {
  2277                           ;lcd_driver.c: 120: for(j=0;j<x;j++);
  2278  00061A  0E00               	movlw	0
  2279  00061C  6E05               	movwf	i2Delay_ms@j+1,c
  2280  00061E  0E00               	movlw	0
  2281  000620  6E04               	movwf	i2Delay_ms@j,c
  2282  000622  D002               	goto	i2l1138
  2283  000624                     i2l1136:
  2284  000624  4A04               	infsnz	i2Delay_ms@j,f,c
  2285  000626  2A05               	incf	i2Delay_ms@j+1,f,c
  2286  000628                     i2l1138:
  2287  000628  5005               	movf	i2Delay_ms@j+1,w,c
  2288  00062A  0A80               	xorlw	128
  2289  00062C  6E03               	movwf	??i2_Delay_ms& (0+255),c
  2290  00062E  5001               	movf	i2Delay_ms@x,w,c
  2291  000630  5C04               	subwf	i2Delay_ms@j,w,c
  2292  000632  5002               	movf	i2Delay_ms@x+1,w,c
  2293  000634  0A80               	xorlw	128
  2294  000636  5803               	subwfb	??i2_Delay_ms& (0+255),w,c
  2295  000638  A0D8               	btfss	status,0,c
  2296  00063A  D7F4               	goto	i2l1136
  2297  00063C  4A06               	infsnz	i2Delay_ms@i,f,c
  2298  00063E  2A07               	incf	i2Delay_ms@i+1,f,c
  2299  000640  D7E4               	goto	L2
  2300  000642                     i2l66:
  2301  000642  0012               	return	
  2302  000644                     __end_ofi2_Delay_ms:
  2303                           	opt stack 0
  2304                           pclatu	equ	0xFFB
  2305                           pclath	equ	0xFFA
  2306                           tblptru	equ	0xFF8
  2307                           tblptrh	equ	0xFF7
  2308                           tblptrl	equ	0xFF6
  2309                           tablat	equ	0xFF5
  2310                           prodh	equ	0xFF4
  2311                           prodl	equ	0xFF3
  2312                           intcon	equ	0xFF2
  2313                           indf0	equ	0xFEF
  2314                           postinc0	equ	0xFEE
  2315                           fsr0h	equ	0xFEA
  2316                           fsr0l	equ	0xFE9
  2317                           wreg	equ	0xFE8
  2318                           postdec1	equ	0xFE5
  2319                           fsr1h	equ	0xFE2
  2320                           fsr1l	equ	0xFE1
  2321                           indf2	equ	0xFDF
  2322                           fsr2h	equ	0xFDA
  2323                           fsr2l	equ	0xFD9
  2324                           status	equ	0xFD8
  2325                           
  2326 ;; *************** function _putsUSART *****************
  2327 ;; Defined at:
  2328 ;;		line 14 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\USART\uputs.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;  data            2    1[COMRAM] PTR unsigned char 
  2331 ;;		 -> MessageBuffer(200), 
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;		None
  2334 ;; Return value:  Size  Location     Type
  2335 ;;		None               void
  2336 ;; Registers used:
  2337 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/0
  2340 ;;		On exit  : 0/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2343 ;;      Params:         2       0       0       0
  2344 ;;      Locals:         0       0       0       0
  2345 ;;      Temps:          0       0       0       0
  2346 ;;      Totals:         2       0       0       0
  2347 ;;Total ram usage:        2 bytes
  2348 ;; Hardware stack levels used:    1
  2349 ;; Hardware stack levels required when called:    1
  2350 ;; This function calls:
  2351 ;;		_WriteUSART
  2352 ;; This function is called by:
  2353 ;;		_SerialRxPinInterrupt
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text20
  2358  000724                     __ptext20:
  2359                           	opt stack 0
  2360  000724                     _putsUSART:
  2361                           	opt stack 24
  2362  000724                     i2l180:
  2363  000724  A2AC               	btfss	4012,1,c	;volatile
  2364  000726  D7FE               	goto	i2l180
  2365  000728  C002  FFD9         	movff	putsUSART@data,fsr2l
  2366  00072C  C003  FFDA         	movff	putsUSART@data+1,fsr2h
  2367  000730  50DF               	movf	indf2,w,c
  2368  000732  EC2D  F004         	call	_WriteUSART
  2369  000736  C002  FFD9         	movff	putsUSART@data,fsr2l
  2370  00073A  C003  FFDA         	movff	putsUSART@data+1,fsr2h
  2371  00073E  4A02               	infsnz	putsUSART@data,f,c
  2372  000740  2A03               	incf	putsUSART@data+1,f,c
  2373  000742  50DF               	movf	indf2,w,c
  2374  000744  B4D8               	btfsc	status,2,c
  2375  000746  0012               	return	
  2376  000748  D7ED               	goto	i2l180
  2377  00074A                     __end_of_putsUSART:
  2378                           	opt stack 0
  2379                           pclatu	equ	0xFFB
  2380                           pclath	equ	0xFFA
  2381                           tblptru	equ	0xFF8
  2382                           tblptrh	equ	0xFF7
  2383                           tblptrl	equ	0xFF6
  2384                           tablat	equ	0xFF5
  2385                           prodh	equ	0xFF4
  2386                           prodl	equ	0xFF3
  2387                           intcon	equ	0xFF2
  2388                           indf0	equ	0xFEF
  2389                           postinc0	equ	0xFEE
  2390                           fsr0h	equ	0xFEA
  2391                           fsr0l	equ	0xFE9
  2392                           wreg	equ	0xFE8
  2393                           postdec1	equ	0xFE5
  2394                           fsr1h	equ	0xFE2
  2395                           fsr1l	equ	0xFE1
  2396                           indf2	equ	0xFDF
  2397                           fsr2h	equ	0xFDA
  2398                           fsr2l	equ	0xFD9
  2399                           status	equ	0xFD8
  2400                           
  2401 ;; *************** function _WriteUSART *****************
  2402 ;; Defined at:
  2403 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\USART\uwrite.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;  data            1    wreg     unsigned char 
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;  data            1    0[COMRAM] unsigned char 
  2408 ;; Return value:  Size  Location     Type
  2409 ;;		None               void
  2410 ;; Registers used:
  2411 ;;		wreg
  2412 ;; Tracked objects:
  2413 ;;		On entry : 0/0
  2414 ;;		On exit  : 0/0
  2415 ;;		Unchanged: 0/0
  2416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2417 ;;      Params:         0       0       0       0
  2418 ;;      Locals:         1       0       0       0
  2419 ;;      Temps:          0       0       0       0
  2420 ;;      Totals:         1       0       0       0
  2421 ;;Total ram usage:        1 bytes
  2422 ;; Hardware stack levels used:    1
  2423 ;; This function calls:
  2424 ;;		Nothing
  2425 ;; This function is called by:
  2426 ;;		_putsUSART
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           	psect	text21
  2431  00085A                     __ptext21:
  2432                           	opt stack 0
  2433  00085A                     _WriteUSART:
  2434                           	opt stack 24
  2435                           
  2436                           ;incstack = 0
  2437                           ;WriteUSART@data stored from wreg
  2438  00085A  6E01               	movwf	WriteUSART@data,c
  2439  00085C  ACAC               	btfss	4012,6,c	;volatile
  2440  00085E  D003               	goto	i2l884
  2441  000860  90AC               	bcf	4012,0,c	;volatile
  2442  000862  B240               	btfsc	_USART_Status,1,c
  2443  000864  80AC               	bsf	4012,0,c	;volatile
  2444  000866                     i2l884:
  2445  000866  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
  2446  00086A  0012               	return	
  2447  00086C                     __end_of_WriteUSART:
  2448                           	opt stack 0
  2449                           pclatu	equ	0xFFB
  2450                           pclath	equ	0xFFA
  2451                           tblptru	equ	0xFF8
  2452                           tblptrh	equ	0xFF7
  2453                           tblptrl	equ	0xFF6
  2454                           tablat	equ	0xFF5
  2455                           prodh	equ	0xFF4
  2456                           prodl	equ	0xFF3
  2457                           intcon	equ	0xFF2
  2458                           indf0	equ	0xFEF
  2459                           postinc0	equ	0xFEE
  2460                           fsr0h	equ	0xFEA
  2461                           fsr0l	equ	0xFE9
  2462                           wreg	equ	0xFE8
  2463                           postdec1	equ	0xFE5
  2464                           fsr1h	equ	0xFE2
  2465                           fsr1l	equ	0xFE1
  2466                           indf2	equ	0xFDF
  2467                           fsr2h	equ	0xFDA
  2468                           fsr2l	equ	0xFD9
  2469                           status	equ	0xFD8
  2470                           
  2471 ;; *************** function _ReadUSART *****************
  2472 ;; Defined at:
  2473 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\USART\uread.c"
  2474 ;; Parameters:    Size  Location     Type
  2475 ;;		None
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;  data            1    0[COMRAM] unsigned char 
  2478 ;; Return value:  Size  Location     Type
  2479 ;;                  1    wreg      unsigned char 
  2480 ;; Registers used:
  2481 ;;		wreg, status,2, status,0
  2482 ;; Tracked objects:
  2483 ;;		On entry : 0/0
  2484 ;;		On exit  : 0/0
  2485 ;;		Unchanged: 0/0
  2486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2487 ;;      Params:         0       0       0       0
  2488 ;;      Locals:         1       0       0       0
  2489 ;;      Temps:          0       0       0       0
  2490 ;;      Totals:         1       0       0       0
  2491 ;;Total ram usage:        1 bytes
  2492 ;; Hardware stack levels used:    1
  2493 ;; This function calls:
  2494 ;;		Nothing
  2495 ;; This function is called by:
  2496 ;;		_SerialRxPinInterrupt
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500                           	psect	text22
  2501  0007C2                     __ptext22:
  2502                           	opt stack 0
  2503  0007C2                     _ReadUSART:
  2504                           	opt stack 25
  2505                           
  2506                           ;incstack = 0
  2507  0007C2  0EF2               	movlw	242
  2508  0007C4  1640               	andwf	_USART_Status,f,c
  2509  0007C6  ACAB               	btfss	4011,6,c	;volatile
  2510  0007C8  D003               	goto	i2l193
  2511  0007CA  9040               	bcf	_USART_Status,0,c
  2512  0007CC  B0AB               	btfsc	4011,0,c	;volatile
  2513  0007CE  8040               	bsf	_USART_Status,0,c
  2514  0007D0                     i2l193:
  2515  0007D0  B4AB               	btfsc	4011,2,c	;volatile
  2516  0007D2  8440               	bsf	_USART_Status,2,c
  2517  0007D4  B2AB               	btfsc	4011,1,c	;volatile
  2518  0007D6  8640               	bsf	_USART_Status,3,c
  2519  0007D8  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  2520  0007DC  5001               	movf	ReadUSART@data,w,c
  2521  0007DE  0012               	return	
  2522  0007E0                     __end_of_ReadUSART:
  2523                           	opt stack 0
  2524                           pclatu	equ	0xFFB
  2525                           pclath	equ	0xFFA
  2526                           tblptru	equ	0xFF8
  2527                           tblptrh	equ	0xFF7
  2528                           tblptrl	equ	0xFF6
  2529                           tablat	equ	0xFF5
  2530                           prodh	equ	0xFF4
  2531                           prodl	equ	0xFF3
  2532                           intcon	equ	0xFF2
  2533                           indf0	equ	0xFEF
  2534                           postinc0	equ	0xFEE
  2535                           fsr0h	equ	0xFEA
  2536                           fsr0l	equ	0xFE9
  2537                           wreg	equ	0xFE8
  2538                           postdec1	equ	0xFE5
  2539                           fsr1h	equ	0xFE2
  2540                           fsr1l	equ	0xFE1
  2541                           indf2	equ	0xFDF
  2542                           fsr2h	equ	0xFDA
  2543                           fsr2l	equ	0xFD9
  2544                           status	equ	0xFD8
  2545                           pclatu	equ	0xFFB
  2546                           pclath	equ	0xFFA
  2547                           tblptru	equ	0xFF8
  2548                           tblptrh	equ	0xFF7
  2549                           tblptrl	equ	0xFF6
  2550                           tablat	equ	0xFF5
  2551                           prodh	equ	0xFF4
  2552                           prodl	equ	0xFF3
  2553                           intcon	equ	0xFF2
  2554                           indf0	equ	0xFEF
  2555                           postinc0	equ	0xFEE
  2556                           fsr0h	equ	0xFEA
  2557                           fsr0l	equ	0xFE9
  2558                           wreg	equ	0xFE8
  2559                           postdec1	equ	0xFE5
  2560                           fsr1h	equ	0xFE2
  2561                           fsr1l	equ	0xFE1
  2562                           indf2	equ	0xFDF
  2563                           fsr2h	equ	0xFDA
  2564                           fsr2l	equ	0xFD9
  2565                           status	equ	0xFD8
  2566                           
  2567                           	psect	rparam
  2568  0000                     pclatu	equ	0xFFB
  2569                           pclath	equ	0xFFA
  2570                           tblptru	equ	0xFF8
  2571                           tblptrh	equ	0xFF7
  2572                           tblptrl	equ	0xFF6
  2573                           tablat	equ	0xFF5
  2574                           prodh	equ	0xFF4
  2575                           prodl	equ	0xFF3
  2576                           intcon	equ	0xFF2
  2577                           indf0	equ	0xFEF
  2578                           postinc0	equ	0xFEE
  2579                           fsr0h	equ	0xFEA
  2580                           fsr0l	equ	0xFE9
  2581                           wreg	equ	0xFE8
  2582                           postdec1	equ	0xFE5
  2583                           fsr1h	equ	0xFE2
  2584                           fsr1l	equ	0xFE1
  2585                           indf2	equ	0xFDF
  2586                           fsr2h	equ	0xFDA
  2587                           fsr2l	equ	0xFD9
  2588                           status	equ	0xFD8


Data Sizes:
    Strings     6
    Constant    0
    Data        18
    BSS         203
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     43      66
    BANK0           160      0       0
    BANK1           256      0     200
    BANK2           256      0       0

Pointer List with Targets:

    putsUSART@data	PTR unsigned char  size(2) Largest target is 200
		 -> MessageBuffer(BANK1[200]), 

    lcd_puts@p	PTR const unsigned char  size(2) Largest target is 200
		 -> MessageBuffer(BANK1[200]), STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _main->_lcd_puts
    _lcd_puts->_dis_data
    _dis_data->_lcddata
    _lcddata->_Delay_ms
    _lcd_init->_dis_cmd
    _lcd_goto->_dis_cmd
    _dis_cmd->_lcdcmd
    _lcdcmd->_Delay_ms

Critical Paths under _SerialRxPinInterrupt in COMRAM

    _SerialRxPinInterrupt->i2_lcd_puts
    i2_lcd_puts->i2_dis_data
    i2_dis_data->i2_lcddata
    i2_lcddata->i2_Delay_ms
    i2_lcd_goto->i2_dis_cmd
    i2_dis_cmd->i2_lcdcmd
    i2_lcdcmd->i2_Delay_ms
    _putsUSART->_WriteUSART

Critical Paths under _main in BANK0

    None.

Critical Paths under _SerialRxPinInterrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SerialRxPinInterrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SerialRxPinInterrupt in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5    1082
                                             38 COMRAM     5     0      5
                          _OpenUSART
                         _SetupClock
                           _lcd_goto
                           _lcd_init
                           _lcd_puts
                        _set_lcdport
 ---------------------------------------------------------------------------------
 (1) _set_lcdport                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     0      2     342
                                             36 COMRAM     2     0      2
                           _dis_data
 ---------------------------------------------------------------------------------
 (2) _dis_data                                             2     2      0     221
                                             34 COMRAM     2     2      0
                            _lcddata
 ---------------------------------------------------------------------------------
 (3) _lcddata                                              1     1      0     161
                                             33 COMRAM     1     1      0
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     221
                            _dis_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             1     1      0     326
                                             36 COMRAM     1     1      0
                            _dis_cmd
 ---------------------------------------------------------------------------------
 (2) _dis_cmd                                              2     2      0     221
                                             34 COMRAM     2     2      0
                             _lcdcmd
 ---------------------------------------------------------------------------------
 (3) _lcdcmd                                               1     1      0     161
                                             33 COMRAM     1     1      0
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (4) _Delay_ms                                             7     5      2     146
                                             26 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _SetupClock                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     193
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _SerialRxPinInterrupt                                14    14      0     909
                                             12 COMRAM    14    14      0
                          _ReadUSART
                          _putsUSART
                         i2_lcd_goto
                         i2_lcd_puts
 ---------------------------------------------------------------------------------
 (6) i2_lcd_puts                                           2     0      2     353
                                             10 COMRAM     2     0      2
                         i2_dis_data
 ---------------------------------------------------------------------------------
 (7) i2_dis_data                                           2     2      0     256
                                              8 COMRAM     2     2      0
                          i2_lcddata
 ---------------------------------------------------------------------------------
 (8) i2_lcddata                                            1     1      0     166
                                              7 COMRAM     1     1      0
                         i2_Delay_ms
 ---------------------------------------------------------------------------------
 (6) i2_lcd_goto                                           1     1      0     410
                                             10 COMRAM     1     1      0
                          i2_dis_cmd
 ---------------------------------------------------------------------------------
 (7) i2_dis_cmd                                            2     2      0     256
                                              8 COMRAM     2     2      0
                           i2_lcdcmd
 ---------------------------------------------------------------------------------
 (8) i2_lcdcmd                                             1     1      0     166
                                              7 COMRAM     1     1      0
                         i2_Delay_ms
 ---------------------------------------------------------------------------------
 (9) i2_Delay_ms                                           7     5      2     144
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _putsUSART                                            2     0      2     131
                                              1 COMRAM     2     0      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (7) _WriteUSART                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadUSART                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenUSART
   _SetupClock
   _lcd_goto
     _dis_cmd
       _lcdcmd
         _Delay_ms
   _lcd_init
     _dis_cmd
       _lcdcmd
         _Delay_ms
   _lcd_puts
     _dis_data
       _lcddata
         _Delay_ms
   _set_lcdport

 _SerialRxPinInterrupt (ROOT)
   _ReadUSART
   _putsUSART
     _WriteUSART
   i2_lcd_goto
     i2_dis_cmd
       i2_lcdcmd
         i2_Delay_ms
   i2_lcd_puts
     i2_dis_data
       i2_lcddata
         i2_Delay_ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      C8       6       78.1%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2B      42       1       69.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10A       9        0.0%
DATA                 0      0     10A      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Jul 28 22:48:11 2015

                            _i 003E                             l66 0600                             l99 06BA  
                           u90 04FC                             u97 04F2                            l120 05BE  
                          l170 04B6                            l163 0494                            l172 04D8  
                          l167 04A8                            l168 04AA                            l169 04B4  
                          l802 05E2                            l804 05E6                            l904 04DC  
                          l922 06B2                            l914 0692                            l908 0504  
                          l918 06A2                            l944 0496                            l936 0488  
                          u100 0524                            u107 051A                    lcd_goto@cnt 0025  
                          wreg 000FE8               i2lcddata@dataout 0008                     i2_dis_data 0786  
                   i2_lcd_goto 06BC                     i2_lcd_puts 052C                           STR_1 0301  
                 lcdcmd@cmdout 0022                           _LATD 000F8C                           _PEIE 007F96  
                         _RCIE 007CED                           _RCIF 007CF5                           _RCIP 007CFD  
                         i2l66 0642                           i2l99 06F6                           _baud 0042  
                         _main 057E             dis_data@data_value 0023                           fsr0h 000FEA  
                         fsr1h 000FE2                           indf0 000FEF                           fsr0l 000FE9  
                         fsr2h 000FDA                           fsr1l 000FE1                           indf2 000FDF  
                         fsr2l 000FD9                           pclat 000FFA                           prodh 000FF4  
                         prodl 000FF3                           start 0018             i2dis_cmd@cmd_value 0009  
                        ?_main 0027                          i2l135 0438                          i2l180 0724  
                        i2l193 07D0                          i2l884 0866                          _RCREG 000FAE  
                        _RCSTA 000FAB                          _SPBRG 000FAF                          _TRISD 000F95  
                        _TXREG 000FAD                          _TXSTA 000FAC                    ?i2_Delay_ms 0001  
              __end_of_dis_cmd 0786                __end_of_lcddata 07FA            dis_data@data_value1 0024  
                        tablat 000FF5                          status 000FD8               __end_ofi2_lcdcmd 0848  
             __end_of_Delay_ms 0602                 WriteUSART@data 0001            i2dis_cmd@cmd_value1 000A  
              __initialization 0644             __size_ofi2_dis_cmd 001E                   __end_of_main 05C0  
           __size_ofi2_lcddata 001A                         ??_main 002C                     _MsgFromPIC 002C  
                __activetblptr 000002                    i2lcd_puts@p 000B                    ?i2_dis_data 0001  
                  ?i2_lcd_goto 0001                    ?i2_lcd_puts 000B                         i2l1212 03A2  
                       i2l1222 03D2                         i2l1136 0624                         i2l1232 0402  
                       i2l1216 03BC                         i2l1138 0628                         i2l1226 03DA  
                       i2l1236 041C                         i2l1182 0556                         i2l1238 0430  
                       i2l1192 06DE                         i2l1178 052E                         i2l1196 06EE  
                       i2l1188 06CE             __size_of_ReadUSART 001E                         _SPBRGH 000FB0  
             __end_of_dis_data 0768                   ?_set_lcdport 0001                 lcddata@dataout 0022  
             __end_of_lcd_init 0724               __end_of_lcd_goto 06BC             __size_of_OpenUSART 0068  
          __size_ofi2_Delay_ms 0042               __end_of_lcd_puts 052C                         _lcdcmd 07FA  
                   _SetupClock 0876                         clear_0 064A                      ??_dis_cmd 0023  
                    ??_lcddata 0022                   __pdataCOMRAM 002C                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
            __end_ofi2_dis_cmd 07C2              __end_ofi2_lcddata 082E                  _MessageBuffer 0100  
                   __accesstop 0060        __end_of__initialization 0676                 i2lcdcmd@cmdout 0008  
__size_of_SerialRxPinInterrupt 046A                     _WriteUSART 085A                 __pcstackCOMRAM 0001  
          __size_ofi2_dis_data 001E            __size_ofi2_lcd_goto 003C            __size_ofi2_lcd_puts 0052  
            __end_of_ReadUSART 07E0                      ?i2_lcdcmd 0001                      ?_Delay_ms 001B  
                ReadUSART@data 0001              __end_of_OpenUSART 04DA                     __pbssBANK1 0100  
                   __pnvCOMRAM 0041                        ?_lcdcmd 0001                    ?_SetupClock 0001  
                putsUSART@data 0002                     ??i2_lcdcmd 0008                   ??i2_Delay_ms 0003  
                   ??_Delay_ms 001D                        i2u50_40 054E                        i2u50_47 0544  
                      i2u51_40 0576                        i2u51_47 056C                      ?_dis_data 0001  
           __size_of_putsUSART 0026                      ?_lcd_init 0001                      ?_lcd_goto 0001  
                    ?_lcd_puts 0025                        __Hparam 0000                        __Lparam 0000  
                  ?_WriteUSART 0001             __end_ofi2_Delay_ms 0644           __size_of_set_lcdport 000A  
                 __psmallconst 0300                __size_of_lcdcmd 001A                        __pcinit 0644  
                      __ramtop 0300                        _dis_cmd 0768                        __ptext0 057E  
                      __ptext1 086C                        __ptext2 04DA                        __ptext3 074A  
                      __ptext4 07E0                        __ptext5 06F8                        __ptext6 0680  
                      __ptext7 0768                        __ptext8 07FA                        __ptext9 05C0  
                      _lcddata 07E0              dis_cmd@cmd_value1 0024                   ??i2_dis_data 0009  
                   ??_dis_data 0023                   ??i2_lcd_goto 000B                     ??_lcd_init 0025  
                   ??_lcd_goto 0025                   ??i2_lcd_puts 000D                 __pintcode_body 0308  
                   ??_lcd_puts 0027           end_of_initialization 0676            __size_of_SetupClock 0008  
                    Delay_ms@i 0020                      Delay_ms@j 001E                      Delay_ms@x 001B  
                __Lmediumconst 0000                        int_func 0308           i2dis_data@data_value 0009  
                    _RCSTAbits 000FAB                        postdec1 000FE5                        postinc0 000FEE  
            __end_of_putsUSART 074A             __end_ofi2_dis_data 07A4             __end_ofi2_lcd_goto 06F8  
           __end_ofi2_lcd_puts 057E                      _TRISCbits 000F94            __size_of_WriteUSART 0012  
                    i2_dis_cmd 07A4                      i2_lcddata 0814                      _TXSTAbits 000FAC  
                __pidataCOMRAM 0848                 __end_of_lcdcmd 0814   __end_of_SerialRxPinInterrupt 0472  
          start_initialization 0644                      _ReadUSART 07C2              __size_ofi2_lcdcmd 001A  
            __size_of_Delay_ms 0042                      _OpenUSART 0472                     ?i2_dis_cmd 0001  
                   ?i2_lcddata 0001                       ??_lcdcmd 0022                   ??_SetupClock 001B  
                  __pbssCOMRAM 003E                     ?_ReadUSART 0001                  i2lcd_goto@cnt 000B  
          __end_of__stringdata 0307              __size_of_dis_data 001E                     ?_OpenUSART 001B  
            __size_of_lcd_init 002C              __size_of_lcd_goto 003C              __size_of_lcd_puts 0052  
           __end_of_SetupClock 087E                   ??_WriteUSART 0001                      __pintcode 0008  
                     ?_dis_cmd 0001                       ?_lcddata 0001                    __smallconst 0300  
           __end_of_WriteUSART 086C               dis_cmd@cmd_value 0023                    ??i2_dis_cmd 0009  
                  ??i2_lcddata 0008                       _LATDbits 000F8C                       _PIE1bits 000F9D  
         _SerialRxPinInterrupt 0008                  ??_set_lcdport 001B                       _PIR1bits 000F9E  
                    _putsUSART 0724                    __stringdata 0301                       i2_lcdcmd 082E  
                  ??_ReadUSART 0001                      lcd_puts@p 0025                       _Delay_ms 05C0  
                    copy_data0 066A                    ??_OpenUSART 001D                OpenUSART@config 0020  
        ?_SerialRxPinInterrupt 0001                       __Hrparam 0000                       __Lrparam 0000  
          __end_of_set_lcdport 0876                     ?_putsUSART 0002               __size_of_dis_cmd 001E  
             __size_of_lcddata 001A                       __ptext10 0876                       __ptext11 0472  
                     __ptext20 0724                       __ptext21 085A                       __ptext13 052C  
                     __ptext22 07C2                       __ptext14 0786                       __ptext15 0814  
                     __ptext16 06BC                       __ptext17 07A4                       __ptext18 082E  
                     __ptext19 0602                       _dis_data 074A                       _lcd_init 06F8  
                     _lcd_goto 0680                       _lcd_puts 04DA                    i2Delay_ms@i 0006  
                  i2Delay_ms@j 0004                    i2Delay_ms@x 0001                  __size_of_main 0042  
                  _UART1Config 0041                       main@argc 0027                       main@argv 0029  
                   _INTCONbits 000FF2                 OpenUSART@spbrg 001B          i2dis_data@data_value1 000A  
                     intlevel2 0000         ??_SerialRxPinInterrupt 000D                     _OSCCONbits 000FD3  
                  _set_lcdport 086C                    ??_putsUSART 0004                     i2_Delay_ms 0602  
                 _USART_Status 0040  
