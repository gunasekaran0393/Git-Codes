

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Apr 24 23:32:47 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19  0000                     
    20                           ; Version 1.45
    21                           ; Generated 16/11/2017 GMT
    22                           ; 
    23                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4480 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     _LATDbits	set	3980
    55  0000                     _LATD	set	3980
    56  0000                     _TRISD	set	3989
    57                           
    58                           	psect	smallconst
    59  000300                     __psmallconst:
    60                           	opt stack 0
    61  000300  00                 	db	0
    62  000301                     STR_1:
    63  000301  68                 	db	104	;'h'
    64  000302  65                 	db	101	;'e'
    65  000303  6C                 	db	108	;'l'
    66  000304  6C                 	db	108	;'l'
    67  000305  6F                 	db	111	;'o'
    68  000306  20                 	db	32
    69  000307  77                 	db	119	;'w'
    70  000308  6F                 	db	111	;'o'
    71  000309  72                 	db	114	;'r'
    72  00030A  6C                 	db	108	;'l'
    73  00030B  64                 	db	100	;'d'
    74  00030C  20                 	db	32
    75  00030D  20                 	db	32
    76  00030E  00                 	db	0
    77                           
    78                           ; #config settings
    79  00030F  00                 	db	0	; dummy byte at the end
    80  0000                     
    81                           	psect	cinit
    82  000474                     __pcinit:
    83                           	opt stack 0
    84  000474                     start_initialization:
    85                           	opt stack 0
    86  000474                     __initialization:
    87                           	opt stack 0
    88  000474                     end_of_initialization:
    89                           	opt stack 0
    90  000474                     __end_of__initialization:
    91                           	opt stack 0
    92  000474  0E00               	movlw	low (__Lsmallconst shr (0+16))
    93  000476  6EF8               	movwf	tblptru,c
    94  000478  0E03               	movlw	high __Lsmallconst
    95  00047A  6EF7               	movwf	tblptrh,c
    96  00047C  0100               	movlb	0
    97  00047E  EFF2  F001         	goto	_main	;jump to C main() function
    98                           tblptru	equ	0xFF8
    99                           tblptrh	equ	0xFF7
   100                           
   101                           	psect	cstackCOMRAM
   102  000001                     __pcstackCOMRAM:
   103                           	opt stack 0
   104  000001                     Delay_ms@x:
   105                           	opt stack 0
   106                           
   107                           ; 2 bytes @ 0x0
   108  000001                     	ds	2
   109  000003                     ??_Delay_ms:
   110                           
   111                           ; 1 bytes @ 0x2
   112  000003                     	ds	1
   113  000004                     Delay_ms@j:
   114                           	opt stack 0
   115                           
   116                           ; 2 bytes @ 0x3
   117  000004                     	ds	2
   118  000006                     Delay_ms@i:
   119                           	opt stack 0
   120                           
   121                           ; 2 bytes @ 0x5
   122  000006                     	ds	2
   123  000008                     lcdcmd@cmdout:
   124                           	opt stack 0
   125  000008                     lcddata@dataout:
   126                           	opt stack 0
   127                           
   128                           ; 1 bytes @ 0x7
   129  000008                     	ds	1
   130  000009                     dis_cmd@cmd_value:
   131                           	opt stack 0
   132  000009                     dis_data@data_value:
   133                           	opt stack 0
   134                           
   135                           ; 1 bytes @ 0x8
   136  000009                     	ds	1
   137  00000A                     dis_cmd@cmd_value1:
   138                           	opt stack 0
   139  00000A                     dis_data@data_value1:
   140                           	opt stack 0
   141                           
   142                           ; 1 bytes @ 0x9
   143  00000A                     	ds	1
   144  00000B                     lcd_goto@cnt:
   145                           	opt stack 0
   146  00000B                     lcd_puts@p:
   147                           	opt stack 0
   148                           
   149                           ; 2 bytes @ 0xA
   150  00000B                     	ds	2
   151  00000D                     
   152                           ; 2 bytes @ 0xC
   153  00000D                     	ds	2
   154  00000F                     
   155                           ; 3 bytes @ 0xE
   156  00000F                     	ds	3
   157  000012                     tblptru	equ	0xFF8
   158                           tblptrh	equ	0xFF7
   159                           
   160                           ; 1 bytes @ 0x11
   161 ;;
   162 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   163 ;;
   164 ;; *************** function _main *****************
   165 ;; Defined at:
   166 ;;		line 49 in file "../lcd_diver.c"
   167 ;; Parameters:    Size  Location     Type
   168 ;;  argc            2   12[COMRAM] int 
   169 ;;  argv            3   14[COMRAM] PTR PTR unsigned char 
   170 ;; Auto vars:     Size  Location     Type
   171 ;;		None
   172 ;; Return value:  Size  Location     Type
   173 ;;                  2   12[COMRAM] int 
   174 ;; Registers used:
   175 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   176 ;; Tracked objects:
   177 ;;		On entry : 0/0
   178 ;;		On exit  : 0/0
   179 ;;		Unchanged: 0/0
   180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   181 ;;      Params:         5       0       0       0
   182 ;;      Locals:         0       0       0       0
   183 ;;      Temps:          0       0       0       0
   184 ;;      Totals:         5       0       0       0
   185 ;;Total ram usage:        5 bytes
   186 ;; Hardware stack levels required when called:    4
   187 ;; This function calls:
   188 ;;		_lcd_goto
   189 ;;		_lcd_init
   190 ;;		_lcd_puts
   191 ;; This function is called by:
   192 ;;		Startup code after reset
   193 ;; This function uses a non-reentrant model
   194 ;;
   195                           
   196                           	psect	text0
   197  0003E4                     __ptext0:
   198                           	opt stack 0
   199  0003E4                     _main:
   200                           	opt stack 27
   201                           
   202                           ;lcd_diver.c: 52: TRISD=0;
   203                           
   204                           ;incstack = 0
   205  0003E4  0E00               	movlw	0
   206  0003E6  6E95               	movwf	3989,c	;volatile
   207                           
   208                           ;lcd_diver.c: 53: LATD=0;
   209  0003E8  0E00               	movlw	0
   210  0003EA  6E8C               	movwf	3980,c	;volatile
   211                           
   212                           ;lcd_diver.c: 55: lcd_init();
   213  0003EC  ECC7  F001         	call	_lcd_init	;wreg free
   214  0003F0                     
   215                           ;lcd_diver.c: 58: lcd_goto(1);
   216  0003F0  0E01               	movlw	1
   217  0003F2  ECA9  F001         	call	_lcd_goto
   218                           
   219                           ;lcd_diver.c: 59: lcd_puts("hello world  ");
   220  0003F6  0E01               	movlw	low STR_1
   221  0003F8  6E0B               	movwf	lcd_puts@p,c
   222  0003FA  0E03               	movlw	high STR_1
   223  0003FC  6E0C               	movwf	lcd_puts@p+1,c
   224  0003FE  ECDD  F001         	call	_lcd_puts	;wreg free
   225  000402  D7F6               	goto	l27
   226  000404                     __end_of_main:
   227                           	opt stack 0
   228                           tblptru	equ	0xFF8
   229                           tblptrh	equ	0xFF7
   230                           
   231 ;; *************** function _lcd_puts *****************
   232 ;; Defined at:
   233 ;;		line 126 in file "../lcd_diver.c"
   234 ;; Parameters:    Size  Location     Type
   235 ;;  p               2   10[COMRAM] PTR unsigned char 
   236 ;;		 -> STR_1(14), 
   237 ;; Auto vars:     Size  Location     Type
   238 ;;		None
   239 ;; Return value:  Size  Location     Type
   240 ;;                  1    wreg      void 
   241 ;; Registers used:
   242 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   243 ;; Tracked objects:
   244 ;;		On entry : 0/0
   245 ;;		On exit  : 0/0
   246 ;;		Unchanged: 0/0
   247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   248 ;;      Params:         2       0       0       0
   249 ;;      Locals:         0       0       0       0
   250 ;;      Temps:          0       0       0       0
   251 ;;      Totals:         2       0       0       0
   252 ;;Total ram usage:        2 bytes
   253 ;; Hardware stack levels used:    1
   254 ;; Hardware stack levels required when called:    3
   255 ;; This function calls:
   256 ;;		_dis_data
   257 ;; This function is called by:
   258 ;;		_main
   259 ;; This function uses a non-reentrant model
   260 ;;
   261                           
   262                           	psect	text1
   263  0003BA                     __ptext1:
   264                           	opt stack 0
   265  0003BA                     _lcd_puts:
   266                           	opt stack 27
   267                           
   268                           ;lcd_diver.c: 128: while(*p != '\0'){
   269                           
   270                           ;incstack = 0
   271  0003BA  D00A               	goto	l56
   272  0003BC                     
   273                           ;lcd_diver.c: 129: dis_data(*p);
   274  0003BC  C00B  FFF6         	movff	lcd_puts@p,tblptrl
   275  0003C0  C00C  FFF7         	movff	lcd_puts@p+1,tblptrh
   276  0003C4                     	if	0	;tblptru may be non-zero
   277  0003C4                     	endif
   278  0003C4                     	if	0	;tblptru may be non-zero
   279  0003C4                     	endif
   280  0003C4  0008               	tblrd		*
   281  0003C6  50F5               	movf	tablat,w,c
   282  0003C8  EC02  F002         	call	_dis_data
   283                           
   284                           ;lcd_diver.c: 130: p++;
   285  0003CC  4A0B               	infsnz	lcd_puts@p,f,c
   286  0003CE  2A0C               	incf	lcd_puts@p+1,f,c
   287  0003D0                     l56:
   288  0003D0  C00B  FFF6         	movff	lcd_puts@p,tblptrl
   289  0003D4  C00C  FFF7         	movff	lcd_puts@p+1,tblptrh
   290  0003D8                     	if	0	;tblptru may be non-zero
   291  0003D8                     	endif
   292  0003D8                     	if	0	;tblptru may be non-zero
   293  0003D8                     	endif
   294  0003D8  0008               	tblrd		*
   295  0003DA  50F5               	movf	tablat,w,c
   296  0003DC  0900               	iorlw	0
   297  0003DE  B4D8               	btfsc	status,2,c
   298  0003E0  0012               	return	
   299  0003E2  D7EC               	goto	l57
   300  0003E4                     __end_of_lcd_puts:
   301                           	opt stack 0
   302                           tblptru	equ	0xFF8
   303                           tblptrh	equ	0xFF7
   304                           tblptrl	equ	0xFF6
   305                           tablat	equ	0xFF5
   306                           status	equ	0xFD8
   307                           
   308 ;; *************** function _dis_data *****************
   309 ;; Defined at:
   310 ;;		line 87 in file "../lcd_diver.c"
   311 ;; Parameters:    Size  Location     Type
   312 ;;  data_value      1    wreg     unsigned char 
   313 ;; Auto vars:     Size  Location     Type
   314 ;;  data_value      1    8[COMRAM] unsigned char 
   315 ;;  data_value1     1    9[COMRAM] unsigned char 
   316 ;; Return value:  Size  Location     Type
   317 ;;                  1    wreg      void 
   318 ;; Registers used:
   319 ;;		wreg, status,2, status,0, cstack
   320 ;; Tracked objects:
   321 ;;		On entry : 0/0
   322 ;;		On exit  : 0/0
   323 ;;		Unchanged: 0/0
   324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   325 ;;      Params:         0       0       0       0
   326 ;;      Locals:         2       0       0       0
   327 ;;      Temps:          0       0       0       0
   328 ;;      Totals:         2       0       0       0
   329 ;;Total ram usage:        2 bytes
   330 ;; Hardware stack levels used:    1
   331 ;; Hardware stack levels required when called:    2
   332 ;; This function calls:
   333 ;;		_lcddata
   334 ;; This function is called by:
   335 ;;		_lcd_puts
   336 ;;		_lcd_putc
   337 ;;		_lcd_put_array
   338 ;; This function uses a non-reentrant model
   339 ;;
   340                           
   341                           	psect	text2
   342  000404                     __ptext2:
   343                           	opt stack 0
   344  000404                     _dis_data:
   345                           	opt stack 27
   346                           
   347                           ;incstack = 0
   348                           ;dis_data@data_value stored from wreg
   349  000404  6E09               	movwf	dis_data@data_value,c
   350                           
   351                           ;lcd_diver.c: 89: unsigned char data_value1;
   352                           ;lcd_diver.c: 90: data_value1=(data_value&0xF0);
   353  000406  5009               	movf	dis_data@data_value,w,c
   354  000408  0BF0               	andlw	240
   355  00040A  6E0A               	movwf	dis_data@data_value1,c
   356                           
   357                           ;lcd_diver.c: 91: lcddata(data_value1);
   358  00040C  500A               	movf	dis_data@data_value1,w,c
   359  00040E  EC20  F002         	call	_lcddata
   360                           
   361                           ;lcd_diver.c: 92: data_value1=((data_value<<4)&0xF0);
   362  000412  3809               	swapf	dis_data@data_value,w,c
   363  000414  0BF0               	andlw	240
   364  000416  0BF0               	andlw	240
   365  000418  6E0A               	movwf	dis_data@data_value1,c
   366                           
   367                           ;lcd_diver.c: 93: lcddata(data_value1);
   368  00041A  500A               	movf	dis_data@data_value1,w,c
   369  00041C  EC20  F002         	call	_lcddata
   370  000420  0012               	return		;funcret
   371  000422                     __end_of_dis_data:
   372                           	opt stack 0
   373                           tblptru	equ	0xFF8
   374                           tblptrh	equ	0xFF7
   375                           tblptrl	equ	0xFF6
   376                           tablat	equ	0xFF5
   377                           status	equ	0xFD8
   378                           
   379 ;; *************** function _lcddata *****************
   380 ;; Defined at:
   381 ;;		line 105 in file "../lcd_diver.c"
   382 ;; Parameters:    Size  Location     Type
   383 ;;  dataout         1    wreg     unsigned char 
   384 ;; Auto vars:     Size  Location     Type
   385 ;;  dataout         1    7[COMRAM] unsigned char 
   386 ;; Return value:  Size  Location     Type
   387 ;;                  1    wreg      void 
   388 ;; Registers used:
   389 ;;		wreg, status,2, status,0, cstack
   390 ;; Tracked objects:
   391 ;;		On entry : 0/0
   392 ;;		On exit  : 0/0
   393 ;;		Unchanged: 0/0
   394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   395 ;;      Params:         0       0       0       0
   396 ;;      Locals:         1       0       0       0
   397 ;;      Temps:          0       0       0       0
   398 ;;      Totals:         1       0       0       0
   399 ;;Total ram usage:        1 bytes
   400 ;; Hardware stack levels used:    1
   401 ;; Hardware stack levels required when called:    1
   402 ;; This function calls:
   403 ;;		_Delay_ms
   404 ;; This function is called by:
   405 ;;		_dis_data
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409                           	psect	text3
   410  000440                     __ptext3:
   411                           	opt stack 0
   412  000440                     _lcddata:
   413                           	opt stack 27
   414                           
   415                           ;incstack = 0
   416                           ;lcddata@dataout stored from wreg
   417  000440  6E08               	movwf	lcddata@dataout,c
   418                           
   419                           ;lcd_diver.c: 107: LATD=dataout;
   420  000442  C008  FF8C         	movff	lcddata@dataout,3980	;volatile
   421                           
   422                           ;lcd_diver.c: 108: LATDbits.LATD3=1;
   423  000446  868C               	bsf	3980,3,c	;volatile
   424                           
   425                           ;lcd_diver.c: 109: LATDbits.LATD2=1;
   426  000448  848C               	bsf	3980,2,c	;volatile
   427                           
   428                           ;lcd_diver.c: 110: Delay_ms(10);
   429  00044A  0E00               	movlw	0
   430  00044C  6E02               	movwf	Delay_ms@x+1,c
   431  00044E  0E0A               	movlw	10
   432  000450  6E01               	movwf	Delay_ms@x,c
   433  000452  EC88  F001         	call	_Delay_ms	;wreg free
   434                           
   435                           ;lcd_diver.c: 111: LATDbits.LATD2=0;
   436  000456  948C               	bcf	3980,2,c	;volatile
   437  000458  0012               	return		;funcret
   438  00045A                     __end_of_lcddata:
   439                           	opt stack 0
   440                           tblptru	equ	0xFF8
   441                           tblptrh	equ	0xFF7
   442                           tblptrl	equ	0xFF6
   443                           tablat	equ	0xFF5
   444                           status	equ	0xFD8
   445                           
   446 ;; *************** function _lcd_init *****************
   447 ;; Defined at:
   448 ;;		line 65 in file "../lcd_diver.c"
   449 ;; Parameters:    Size  Location     Type
   450 ;;		None
   451 ;; Auto vars:     Size  Location     Type
   452 ;;		None
   453 ;; Return value:  Size  Location     Type
   454 ;;                  1    wreg      void 
   455 ;; Registers used:
   456 ;;		wreg, status,2, status,0, cstack
   457 ;; Tracked objects:
   458 ;;		On entry : 0/0
   459 ;;		On exit  : 0/0
   460 ;;		Unchanged: 0/0
   461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   462 ;;      Params:         0       0       0       0
   463 ;;      Locals:         0       0       0       0
   464 ;;      Temps:          0       0       0       0
   465 ;;      Totals:         0       0       0       0
   466 ;;Total ram usage:        0 bytes
   467 ;; Hardware stack levels used:    1
   468 ;; Hardware stack levels required when called:    3
   469 ;; This function calls:
   470 ;;		_dis_cmd
   471 ;; This function is called by:
   472 ;;		_main
   473 ;; This function uses a non-reentrant model
   474 ;;
   475                           
   476                           	psect	text4
   477  00038E                     __ptext4:
   478                           	opt stack 0
   479  00038E                     _lcd_init:
   480                           	opt stack 27
   481                           
   482                           ;lcd_diver.c: 67: dis_cmd(0x02);
   483                           
   484                           ;incstack = 0
   485  00038E  0E02               	movlw	2
   486  000390  EC11  F002         	call	_dis_cmd
   487                           
   488                           ;lcd_diver.c: 68: dis_cmd(0x28);
   489  000394  0E28               	movlw	40
   490  000396  EC11  F002         	call	_dis_cmd
   491                           
   492                           ;lcd_diver.c: 69: dis_cmd(0x01);
   493  00039A  0E01               	movlw	1
   494  00039C  EC11  F002         	call	_dis_cmd
   495                           
   496                           ;lcd_diver.c: 70: dis_cmd(0x17);
   497  0003A0  0E17               	movlw	23
   498  0003A2  EC11  F002         	call	_dis_cmd
   499                           
   500                           ;lcd_diver.c: 71: dis_cmd(0x0C);
   501  0003A6  0E0C               	movlw	12
   502  0003A8  EC11  F002         	call	_dis_cmd
   503                           
   504                           ;lcd_diver.c: 72: dis_cmd(0x06);
   505  0003AC  0E06               	movlw	6
   506  0003AE  EC11  F002         	call	_dis_cmd
   507                           
   508                           ;lcd_diver.c: 73: dis_cmd(0x83);
   509  0003B2  0E83               	movlw	131
   510  0003B4  EC11  F002         	call	_dis_cmd
   511  0003B8  0012               	return		;funcret
   512  0003BA                     __end_of_lcd_init:
   513                           	opt stack 0
   514                           tblptru	equ	0xFF8
   515                           tblptrh	equ	0xFF7
   516                           tblptrl	equ	0xFF6
   517                           tablat	equ	0xFF5
   518                           status	equ	0xFD8
   519                           
   520 ;; *************** function _lcd_goto *****************
   521 ;; Defined at:
   522 ;;		line 159 in file "../lcd_diver.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;  cnt             1    wreg     unsigned char 
   525 ;; Auto vars:     Size  Location     Type
   526 ;;  cnt             1   10[COMRAM] unsigned char 
   527 ;; Return value:  Size  Location     Type
   528 ;;                  1    wreg      void 
   529 ;; Registers used:
   530 ;;		wreg, status,2, status,0, cstack
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   536 ;;      Params:         0       0       0       0
   537 ;;      Locals:         1       0       0       0
   538 ;;      Temps:          0       0       0       0
   539 ;;      Totals:         1       0       0       0
   540 ;;Total ram usage:        1 bytes
   541 ;; Hardware stack levels used:    1
   542 ;; Hardware stack levels required when called:    3
   543 ;; This function calls:
   544 ;;		_dis_cmd
   545 ;; This function is called by:
   546 ;;		_main
   547 ;; This function uses a non-reentrant model
   548 ;;
   549                           
   550                           	psect	text5
   551  000352                     __ptext5:
   552                           	opt stack 0
   553  000352                     _lcd_goto:
   554                           	opt stack 27
   555                           
   556                           ;incstack = 0
   557                           ;lcd_goto@cnt stored from wreg
   558  000352  6E0B               	movwf	lcd_goto@cnt,c
   559                           
   560                           ;lcd_diver.c: 161: if(cnt > 60)
   561  000354  0E3C               	movlw	60
   562  000356  640B               	cpfsgt	lcd_goto@cnt,c
   563  000358  D005               	goto	l80
   564                           
   565                           ;lcd_diver.c: 162: dis_cmd(0xD4+(cnt-61));
   566  00035A  500B               	movf	lcd_goto@cnt,w,c
   567  00035C  0F97               	addlw	151
   568  00035E  EC11  F002         	call	_dis_cmd
   569  000362  0012               	return	
   570  000364                     l80:
   571                           
   572                           ;lcd_diver.c: 163: else if(cnt > 40)
   573  000364  0E28               	movlw	40
   574  000366  640B               	cpfsgt	lcd_goto@cnt,c
   575  000368  D005               	goto	l82
   576                           
   577                           ;lcd_diver.c: 164: dis_cmd(0x94+(cnt-41));
   578  00036A  500B               	movf	lcd_goto@cnt,w,c
   579  00036C  0F6B               	addlw	107
   580  00036E  EC11  F002         	call	_dis_cmd
   581  000372  0012               	return	
   582  000374                     l82:
   583                           
   584                           ;lcd_diver.c: 165: else if(cnt >20)
   585  000374  0E14               	movlw	20
   586  000376  640B               	cpfsgt	lcd_goto@cnt,c
   587  000378  D005               	goto	l84
   588                           
   589                           ;lcd_diver.c: 166: dis_cmd(0xC0+(cnt-21));
   590  00037A  500B               	movf	lcd_goto@cnt,w,c
   591  00037C  0FAB               	addlw	171
   592  00037E  EC11  F002         	call	_dis_cmd
   593  000382  0012               	return	
   594  000384                     l84:
   595                           
   596                           ;lcd_diver.c: 167: else
   597                           ;lcd_diver.c: 168: dis_cmd(0x80+(cnt-1));
   598  000384  500B               	movf	lcd_goto@cnt,w,c
   599  000386  0F7F               	addlw	127
   600  000388  EC11  F002         	call	_dis_cmd
   601  00038C  0012               	return	
   602  00038E                     __end_of_lcd_goto:
   603                           	opt stack 0
   604                           tblptru	equ	0xFF8
   605                           tblptrh	equ	0xFF7
   606                           tblptrl	equ	0xFF6
   607                           tablat	equ	0xFF5
   608                           status	equ	0xFD8
   609                           
   610 ;; *************** function _dis_cmd *****************
   611 ;; Defined at:
   612 ;;		line 76 in file "../lcd_diver.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;  cmd_value       1    wreg     unsigned char 
   615 ;; Auto vars:     Size  Location     Type
   616 ;;  cmd_value       1    8[COMRAM] unsigned char 
   617 ;;  cmd_value1      1    9[COMRAM] unsigned char 
   618 ;; Return value:  Size  Location     Type
   619 ;;                  1    wreg      void 
   620 ;; Registers used:
   621 ;;		wreg, status,2, status,0, cstack
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   627 ;;      Params:         0       0       0       0
   628 ;;      Locals:         2       0       0       0
   629 ;;      Temps:          0       0       0       0
   630 ;;      Totals:         2       0       0       0
   631 ;;Total ram usage:        2 bytes
   632 ;; Hardware stack levels used:    1
   633 ;; Hardware stack levels required when called:    2
   634 ;; This function calls:
   635 ;;		_lcdcmd
   636 ;; This function is called by:
   637 ;;		_lcd_init
   638 ;;		_lcd_goto
   639 ;;		_lcd_goto_pos
   640 ;;		_lcd_clrscr
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644                           	psect	text6
   645  000422                     __ptext6:
   646                           	opt stack 0
   647  000422                     _dis_cmd:
   648                           	opt stack 27
   649                           
   650                           ;incstack = 0
   651                           ;dis_cmd@cmd_value stored from wreg
   652  000422  6E09               	movwf	dis_cmd@cmd_value,c
   653                           
   654                           ;lcd_diver.c: 78: unsigned char cmd_value1;
   655                           ;lcd_diver.c: 79: cmd_value1 = (cmd_value & 0xF0);
   656  000424  5009               	movf	dis_cmd@cmd_value,w,c
   657  000426  0BF0               	andlw	240
   658  000428  6E0A               	movwf	dis_cmd@cmd_value1,c
   659                           
   660                           ;lcd_diver.c: 80: lcdcmd(cmd_value1);
   661  00042A  500A               	movf	dis_cmd@cmd_value1,w,c
   662  00042C  EC2D  F002         	call	_lcdcmd
   663                           
   664                           ;lcd_diver.c: 81: cmd_value1 = ((cmd_value<<4) & 0xF0);
   665  000430  3809               	swapf	dis_cmd@cmd_value,w,c
   666  000432  0BF0               	andlw	240
   667  000434  0BF0               	andlw	240
   668  000436  6E0A               	movwf	dis_cmd@cmd_value1,c
   669                           
   670                           ;lcd_diver.c: 82: lcdcmd(cmd_value1);
   671  000438  500A               	movf	dis_cmd@cmd_value1,w,c
   672  00043A  EC2D  F002         	call	_lcdcmd
   673  00043E  0012               	return		;funcret
   674  000440                     __end_of_dis_cmd:
   675                           	opt stack 0
   676                           tblptru	equ	0xFF8
   677                           tblptrh	equ	0xFF7
   678                           tblptrl	equ	0xFF6
   679                           tablat	equ	0xFF5
   680                           status	equ	0xFD8
   681                           
   682 ;; *************** function _lcdcmd *****************
   683 ;; Defined at:
   684 ;;		line 96 in file "../lcd_diver.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;  cmdout          1    wreg     unsigned char 
   687 ;; Auto vars:     Size  Location     Type
   688 ;;  cmdout          1    7[COMRAM] unsigned char 
   689 ;; Return value:  Size  Location     Type
   690 ;;                  1    wreg      void 
   691 ;; Registers used:
   692 ;;		wreg, status,2, status,0, cstack
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   698 ;;      Params:         0       0       0       0
   699 ;;      Locals:         1       0       0       0
   700 ;;      Temps:          0       0       0       0
   701 ;;      Totals:         1       0       0       0
   702 ;;Total ram usage:        1 bytes
   703 ;; Hardware stack levels used:    1
   704 ;; Hardware stack levels required when called:    1
   705 ;; This function calls:
   706 ;;		_Delay_ms
   707 ;; This function is called by:
   708 ;;		_dis_cmd
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712                           	psect	text7
   713  00045A                     __ptext7:
   714                           	opt stack 0
   715  00045A                     _lcdcmd:
   716                           	opt stack 27
   717                           
   718                           ;incstack = 0
   719                           ;lcdcmd@cmdout stored from wreg
   720  00045A  6E08               	movwf	lcdcmd@cmdout,c
   721                           
   722                           ;lcd_diver.c: 98: LATD=cmdout;
   723  00045C  C008  FF8C         	movff	lcdcmd@cmdout,3980	;volatile
   724                           
   725                           ;lcd_diver.c: 99: LATDbits.LATD3=0;
   726  000460  968C               	bcf	3980,3,c	;volatile
   727                           
   728                           ;lcd_diver.c: 100: LATDbits.LATD2=1;
   729  000462  848C               	bsf	3980,2,c	;volatile
   730                           
   731                           ;lcd_diver.c: 101: Delay_ms(10);
   732  000464  0E00               	movlw	0
   733  000466  6E02               	movwf	Delay_ms@x+1,c
   734  000468  0E0A               	movlw	10
   735  00046A  6E01               	movwf	Delay_ms@x,c
   736  00046C  EC88  F001         	call	_Delay_ms	;wreg free
   737                           
   738                           ;lcd_diver.c: 102: LATDbits.LATD2=0;
   739  000470  948C               	bcf	3980,2,c	;volatile
   740  000472  0012               	return		;funcret
   741  000474                     __end_of_lcdcmd:
   742                           	opt stack 0
   743                           tblptru	equ	0xFF8
   744                           tblptrh	equ	0xFF7
   745                           tblptrl	equ	0xFF6
   746                           tablat	equ	0xFF5
   747                           status	equ	0xFD8
   748                           
   749 ;; *************** function _Delay_ms *****************
   750 ;; Defined at:
   751 ;;		line 117 in file "../lcd_diver.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;  x               2    0[COMRAM] int 
   754 ;; Auto vars:     Size  Location     Type
   755 ;;  i               2    5[COMRAM] int 
   756 ;;  j               2    3[COMRAM] int 
   757 ;; Return value:  Size  Location     Type
   758 ;;                  1    wreg      void 
   759 ;; Registers used:
   760 ;;		wreg, status,2, status,0
   761 ;; Tracked objects:
   762 ;;		On entry : 0/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   766 ;;      Params:         2       0       0       0
   767 ;;      Locals:         4       0       0       0
   768 ;;      Temps:          1       0       0       0
   769 ;;      Totals:         7       0       0       0
   770 ;;Total ram usage:        7 bytes
   771 ;; Hardware stack levels used:    1
   772 ;; This function calls:
   773 ;;		Nothing
   774 ;; This function is called by:
   775 ;;		_lcdcmd
   776 ;;		_lcddata
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           	psect	text8
   781  000310                     __ptext8:
   782                           	opt stack 0
   783  000310                     _Delay_ms:
   784                           	opt stack 27
   785                           
   786                           ;lcd_diver.c: 119: int i,j;
   787                           ;lcd_diver.c: 120: for (i=0;i<=5;i++)
   788                           
   789                           ;incstack = 0
   790  000310  0E00               	movlw	0
   791  000312  6E07               	movwf	Delay_ms@i+1,c
   792  000314  0E00               	movlw	0
   793  000316  6E06               	movwf	Delay_ms@i,c
   794  000318                     l834:
   795  000318  BE07               	btfsc	Delay_ms@i+1,7,c
   796  00031A  D006               	goto	l48
   797  00031C  5007               	movf	Delay_ms@i+1,w,c
   798  00031E  E118               	bnz	l53
   799  000320  0E06               	movlw	6
   800  000322  5C06               	subwf	Delay_ms@i,w,c
   801  000324  B0D8               	btfsc	status,0,c
   802  000326  0012               	return	
   803  000328                     l48:
   804                           
   805                           ;lcd_diver.c: 121: {
   806                           ;lcd_diver.c: 122: for(j=0;j<x;j++);
   807  000328  0E00               	movlw	0
   808  00032A  6E05               	movwf	Delay_ms@j+1,c
   809  00032C  0E00               	movlw	0
   810  00032E  6E04               	movwf	Delay_ms@j,c
   811  000330  D002               	goto	l50
   812  000332  4A04               	infsnz	Delay_ms@j,f,c
   813  000334  2A05               	incf	Delay_ms@j+1,f,c
   814  000336                     l50:
   815  000336  5001               	movf	Delay_ms@x,w,c
   816  000338  5C04               	subwf	Delay_ms@j,w,c
   817  00033A  5005               	movf	Delay_ms@j+1,w,c
   818  00033C  0A80               	xorlw	128
   819  00033E  6E03               	movwf	??_Delay_ms& (0+255),c
   820  000340  5002               	movf	Delay_ms@x+1,w,c
   821  000342  0A80               	xorlw	128
   822  000344  5803               	subwfb	??_Delay_ms& (0+255),w,c
   823  000346  A0D8               	btfss	status,0,c
   824  000348  D7F4               	goto	l51
   825  00034A  4A06               	infsnz	Delay_ms@i,f,c
   826  00034C  2A07               	incf	Delay_ms@i+1,f,c
   827  00034E  D7E4               	goto	l834
   828  000350                     l53:
   829  000350  0012               	return		;funcret
   830  000352                     __end_of_Delay_ms:
   831                           	opt stack 0
   832                           tblptru	equ	0xFF8
   833                           tblptrh	equ	0xFF7
   834                           tblptrl	equ	0xFF6
   835                           tablat	equ	0xFF5
   836                           status	equ	0xFD8
   837                           tblptru	equ	0xFF8
   838                           tblptrh	equ	0xFF7
   839                           tblptrl	equ	0xFF6
   840                           tablat	equ	0xFF5
   841                           status	equ	0xFD8
   842                           
   843                           	psect	rparam
   844  0000                     tblptru	equ	0xFF8
   845                           tblptrh	equ	0xFF7
   846                           tblptrl	equ	0xFF6
   847                           tablat	equ	0xFF5
   848                           status	equ	0xFD8


Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     17      17
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    lcd_puts@p	PTR unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_lcd_puts
    _lcd_puts->_dis_data
    _dis_data->_lcddata
    _lcddata->_Delay_ms
    _lcd_init->_dis_cmd
    _lcd_goto->_dis_cmd
    _dis_cmd->_lcdcmd
    _lcdcmd->_Delay_ms

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5    1343
                                             12 COMRAM     5     0      5
                           _lcd_goto
                           _lcd_init
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     0      2     477
                                             10 COMRAM     2     0      2
                           _dis_data
 ---------------------------------------------------------------------------------
 (2) _dis_data                                             2     2      0     356
                                              8 COMRAM     2     2      0
                            _lcddata
 ---------------------------------------------------------------------------------
 (3) _lcddata                                              1     1      0     266
                                              7 COMRAM     1     1      0
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     356
                            _dis_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             1     1      0     510
                                             10 COMRAM     1     1      0
                            _dis_cmd
 ---------------------------------------------------------------------------------
 (2) _dis_cmd                                              2     2      0     356
                                              8 COMRAM     2     2      0
                             _lcdcmd
 ---------------------------------------------------------------------------------
 (3) _lcdcmd                                               1     1      0     266
                                              7 COMRAM     1     1      0
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (4) _Delay_ms                                             7     5      2     244
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_goto
     _dis_cmd
       _lcdcmd
         _Delay_ms
   _lcd_init
     _dis_cmd
       _lcdcmd
         _Delay_ms
   _lcd_puts
     _dis_data
       _lcddata
         _Delay_ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     11      11       1       17.9%
STACK                0      0       0       2        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
ABS                  0      0       0       9        0.0%
BIGRAM             2FF      0       0      10        0.0%
DATA                 0      0       0      11        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Apr 24 23:32:47 2018

                     l50 0336                       l51 0332                       l27 03F0  
                     l53 0350                       l48 0328                       l80 0364  
                     l56 03D0                       l57 03BC                       l82 0374  
                     l84 0384                      l834 0318              lcd_goto@cnt 000B  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     STR_1 0301  
           lcdcmd@cmdout 0008                     _LATD 000F8C                     _main 03E4  
     dis_data@data_value 0009                     start 0000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000                    ?_main 000D                    _TRISD 000F95  
        __end_of_dis_cmd 0440          __end_of_lcddata 045A      dis_data@data_value1 000A  
         __CFG_BOREN$OFF 000000                    tablat 000FF5                    status 000FD8  
       __end_of_Delay_ms 0352          __initialization 0474             __end_of_main 0404  
                 ??_main 0012            __activetblptr 000001         __end_of_dis_data 0422  
         lcddata@dataout 0008         __end_of_lcd_init 03BA         __end_of_lcd_goto 038E  
       __end_of_lcd_puts 03E4                   _lcdcmd 045A                ??_dis_cmd 0009  
              ??_lcddata 0008             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 0474            ___rparam_used 000001           __pcstackCOMRAM 0001  
        __CFG_OSC$IRCIO7 000000                ?_Delay_ms 0001                  ?_lcdcmd 0001  
             ??_Delay_ms 0003                ?_dis_data 0001                ?_lcd_init 0001  
              ?_lcd_goto 0001                ?_lcd_puts 000B                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0300          __size_of_lcdcmd 001A  
                __pcinit 0474                  __ramtop 0300                  _dis_cmd 0422  
                __ptext0 03E4                  __ptext1 03BA                  __ptext2 0404  
                __ptext3 0440                  __ptext4 038E                  __ptext5 0352  
                __ptext6 0422                  __ptext7 045A                  __ptext8 0310  
                _lcddata 0440        dis_cmd@cmd_value1 000A               ??_dis_data 0009  
             ??_lcd_init 000B               ??_lcd_goto 000B               ??_lcd_puts 000D  
   end_of_initialization 0474                Delay_ms@i 0006                Delay_ms@j 0004  
              Delay_ms@x 0001           __end_of_lcdcmd 0474      start_initialization 0474  
      __size_of_Delay_ms 0042                 ??_lcdcmd 0008        __size_of_dis_data 001E  
      __size_of_lcd_init 002C        __size_of_lcd_goto 003C        __size_of_lcd_puts 002A  
               ?_dis_cmd 0001                 ?_lcddata 0001              __smallconst 0300  
       dis_cmd@cmd_value 0009                 _LATDbits 000F8C                lcd_puts@p 000B  
               _Delay_ms 0310                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 0300         __size_of_dis_cmd 001E         __size_of_lcddata 001A  
               _dis_data 0404                 _lcd_init 038E                 _lcd_goto 0352  
               _lcd_puts 03BA            __size_of_main 0020                 main@argc 000D  
               main@argv 000F  
